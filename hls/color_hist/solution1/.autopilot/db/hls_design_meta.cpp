#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_INPUT_IMAGE_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_INPUT_IMAGE_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_INPUT_IMAGE_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_INPUT_IMAGE_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_INPUT_IMAGE_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_INPUT_IMAGE_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_INPUT_IMAGE_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_INPUT_IMAGE_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_INPUT_IMAGE_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_INPUT_IMAGE_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_INPUT_IMAGE_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_INPUT_IMAGE_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_INPUT_IMAGE_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_INPUT_IMAGE_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_INPUT_IMAGE_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_INPUT_IMAGE_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_INPUT_IMAGE_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_INPUT_IMAGE_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_INPUT_IMAGE_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_INPUT_IMAGE_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_INPUT_IMAGE_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_FEATURE_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_FEATURE_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_FEATURE_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_FEATURE_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_FEATURE_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_FEATURE_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_FEATURE_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_FEATURE_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_FEATURE_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_FEATURE_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_FEATURE_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_FEATURE_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_FEATURE_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_FEATURE_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_FEATURE_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_FEATURE_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_FEATURE_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_FEATURE_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_FEATURE_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_FEATURE_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_FEATURE_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_FEATURE_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_FEATURE_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_FEATURE_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_FEATURE_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_FEATURE_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_FEATURE_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_FEATURE_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_FEATURE_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_FEATURE_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_FEATURE_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_FEATURE_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_FEATURE_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_FEATURE_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_FEATURE_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_FEATURE_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_FEATURE_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_FEATURE_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_FEATURE_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_FEATURE_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_FEATURE_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_FEATURE_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_FEATURE_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_FEATURE_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_FEATURE_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("s_axi_CONTROL_BUS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_SPECS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_SPECS_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "color_hist";
