// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "color_hist.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic color_hist::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic color_hist::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> color_hist::ap_ST_fsm_state1 = "1";
const sc_lv<15> color_hist::ap_ST_fsm_state2 = "10";
const sc_lv<15> color_hist::ap_ST_fsm_state3 = "100";
const sc_lv<15> color_hist::ap_ST_fsm_state4 = "1000";
const sc_lv<15> color_hist::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<15> color_hist::ap_ST_fsm_state29 = "100000";
const sc_lv<15> color_hist::ap_ST_fsm_state30 = "1000000";
const sc_lv<15> color_hist::ap_ST_fsm_state31 = "10000000";
const sc_lv<15> color_hist::ap_ST_fsm_state32 = "100000000";
const sc_lv<15> color_hist::ap_ST_fsm_pp1_stage0 = "1000000000";
const sc_lv<15> color_hist::ap_ST_fsm_state36 = "10000000000";
const sc_lv<15> color_hist::ap_ST_fsm_state37 = "100000000000";
const sc_lv<15> color_hist::ap_ST_fsm_state38 = "1000000000000";
const sc_lv<15> color_hist::ap_ST_fsm_state39 = "10000000000000";
const sc_lv<15> color_hist::ap_ST_fsm_state40 = "100000000000000";
const sc_lv<32> color_hist::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool color_hist::ap_const_boolean_1 = true;
const bool color_hist::ap_const_boolean_0 = false;
const sc_lv<1> color_hist::ap_const_lv1_1 = "1";
const sc_lv<32> color_hist::ap_const_lv32_8 = "1000";
const sc_lv<1> color_hist::ap_const_lv1_0 = "0";
const sc_lv<32> color_hist::ap_const_lv32_E = "1110";
const int color_hist::C_S_AXI_DATA_WIDTH = "100000";
const int color_hist::C_M_AXI_INPUT_IMAGE_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int color_hist::C_M_AXI_INPUT_IMAGE_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int color_hist::C_M_AXI_INPUT_IMAGE_CACHE_VALUE = "11";
const int color_hist::C_M_AXI_DATA_WIDTH = "100000";
const int color_hist::C_M_AXI_FEATURE_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int color_hist::C_M_AXI_FEATURE_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int color_hist::C_M_AXI_FEATURE_CACHE_VALUE = "11";
const sc_lv<32> color_hist::ap_const_lv32_4 = "100";
const sc_lv<32> color_hist::ap_const_lv32_1 = "1";
const sc_lv<32> color_hist::ap_const_lv32_2 = "10";
const sc_lv<32> color_hist::ap_const_lv32_3 = "11";
const sc_lv<32> color_hist::ap_const_lv32_6 = "110";
const sc_lv<32> color_hist::ap_const_lv32_9 = "1001";
const sc_lv<11> color_hist::ap_const_lv11_0 = "00000000000";
const sc_lv<5> color_hist::ap_const_lv5_0 = "00000";
const sc_lv<7> color_hist::ap_const_lv7_0 = "0000000";
const sc_lv<6> color_hist::ap_const_lv6_0 = "000000";
const sc_lv<32> color_hist::ap_const_lv32_5 = "101";
const sc_lv<32> color_hist::ap_const_lv32_7 = "111";
const sc_lv<64> color_hist::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> color_hist::ap_const_lv64_1 = "1";
const sc_lv<64> color_hist::ap_const_lv64_2 = "10";
const sc_lv<32> color_hist::ap_const_lv32_60 = "1100000";
const sc_lv<3> color_hist::ap_const_lv3_0 = "000";
const sc_lv<2> color_hist::ap_const_lv2_0 = "00";
const sc_lv<4> color_hist::ap_const_lv4_0 = "0000";
const sc_lv<32> color_hist::ap_const_lv32_24 = "100100";
const sc_lv<2> color_hist::ap_const_lv2_3 = "11";
const sc_lv<4> color_hist::ap_const_lv4_E = "1110";
const sc_lv<4> color_hist::ap_const_lv4_D = "1101";
const sc_lv<4> color_hist::ap_const_lv4_C = "1100";
const sc_lv<4> color_hist::ap_const_lv4_B = "1011";
const sc_lv<4> color_hist::ap_const_lv4_A = "1010";
const sc_lv<4> color_hist::ap_const_lv4_9 = "1001";
const sc_lv<4> color_hist::ap_const_lv4_8 = "1000";
const sc_lv<4> color_hist::ap_const_lv4_7 = "111";
const sc_lv<4> color_hist::ap_const_lv4_6 = "110";
const sc_lv<4> color_hist::ap_const_lv4_5 = "101";
const sc_lv<4> color_hist::ap_const_lv4_4 = "100";
const sc_lv<4> color_hist::ap_const_lv4_3 = "11";
const sc_lv<4> color_hist::ap_const_lv4_2 = "10";
const sc_lv<4> color_hist::ap_const_lv4_1 = "1";
const sc_lv<4> color_hist::ap_const_lv4_F = "1111";
const sc_lv<16> color_hist::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> color_hist::ap_const_lv32_1F = "11111";
const sc_lv<11> color_hist::ap_const_lv11_600 = "11000000000";
const sc_lv<11> color_hist::ap_const_lv11_1 = "1";
const sc_lv<7> color_hist::ap_const_lv7_60 = "1100000";
const sc_lv<5> color_hist::ap_const_lv5_1 = "1";
const sc_lv<7> color_hist::ap_const_lv7_1 = "1";
const sc_lv<11> color_hist::ap_const_lv11_60 = "1100000";
const sc_lv<14> color_hist::ap_const_lv14_60 = "1100000";
const sc_lv<32> color_hist::ap_const_lv32_15 = "10101";
const sc_lv<32> color_hist::ap_const_lv32_18 = "11000";
const sc_lv<6> color_hist::ap_const_lv6_1 = "1";
const sc_lv<6> color_hist::ap_const_lv6_23 = "100011";
const sc_lv<6> color_hist::ap_const_lv6_24 = "100100";
const sc_lv<30> color_hist::ap_const_lv30_5556 = "101010101010110";
const sc_lv<8> color_hist::ap_const_lv8_0 = "00000000";

color_hist::color_hist(sc_module_name name) : sc_module(name), mVcdFile(0) {
    color_hist_CONTROL_BUS_s_axi_U = new color_hist_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>("color_hist_CONTROL_BUS_s_axi_U");
    color_hist_CONTROL_BUS_s_axi_U->AWVALID(s_axi_CONTROL_BUS_AWVALID);
    color_hist_CONTROL_BUS_s_axi_U->AWREADY(s_axi_CONTROL_BUS_AWREADY);
    color_hist_CONTROL_BUS_s_axi_U->AWADDR(s_axi_CONTROL_BUS_AWADDR);
    color_hist_CONTROL_BUS_s_axi_U->WVALID(s_axi_CONTROL_BUS_WVALID);
    color_hist_CONTROL_BUS_s_axi_U->WREADY(s_axi_CONTROL_BUS_WREADY);
    color_hist_CONTROL_BUS_s_axi_U->WDATA(s_axi_CONTROL_BUS_WDATA);
    color_hist_CONTROL_BUS_s_axi_U->WSTRB(s_axi_CONTROL_BUS_WSTRB);
    color_hist_CONTROL_BUS_s_axi_U->ARVALID(s_axi_CONTROL_BUS_ARVALID);
    color_hist_CONTROL_BUS_s_axi_U->ARREADY(s_axi_CONTROL_BUS_ARREADY);
    color_hist_CONTROL_BUS_s_axi_U->ARADDR(s_axi_CONTROL_BUS_ARADDR);
    color_hist_CONTROL_BUS_s_axi_U->RVALID(s_axi_CONTROL_BUS_RVALID);
    color_hist_CONTROL_BUS_s_axi_U->RREADY(s_axi_CONTROL_BUS_RREADY);
    color_hist_CONTROL_BUS_s_axi_U->RDATA(s_axi_CONTROL_BUS_RDATA);
    color_hist_CONTROL_BUS_s_axi_U->RRESP(s_axi_CONTROL_BUS_RRESP);
    color_hist_CONTROL_BUS_s_axi_U->BVALID(s_axi_CONTROL_BUS_BVALID);
    color_hist_CONTROL_BUS_s_axi_U->BREADY(s_axi_CONTROL_BUS_BREADY);
    color_hist_CONTROL_BUS_s_axi_U->BRESP(s_axi_CONTROL_BUS_BRESP);
    color_hist_CONTROL_BUS_s_axi_U->ACLK(ap_clk);
    color_hist_CONTROL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    color_hist_CONTROL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    color_hist_CONTROL_BUS_s_axi_U->ap_start(ap_start);
    color_hist_CONTROL_BUS_s_axi_U->interrupt(interrupt);
    color_hist_CONTROL_BUS_s_axi_U->ap_ready(ap_ready);
    color_hist_CONTROL_BUS_s_axi_U->ap_done(ap_done);
    color_hist_CONTROL_BUS_s_axi_U->ap_idle(ap_idle);
    color_hist_CONTROL_BUS_s_axi_U->imageptr(imageptr);
    color_hist_CONTROL_BUS_s_axi_U->feature_r(feature_r);
    color_hist_SPECS_s_axi_U = new color_hist_SPECS_s_axi<C_S_AXI_SPECS_ADDR_WIDTH,C_S_AXI_SPECS_DATA_WIDTH>("color_hist_SPECS_s_axi_U");
    color_hist_SPECS_s_axi_U->AWVALID(s_axi_SPECS_AWVALID);
    color_hist_SPECS_s_axi_U->AWREADY(s_axi_SPECS_AWREADY);
    color_hist_SPECS_s_axi_U->AWADDR(s_axi_SPECS_AWADDR);
    color_hist_SPECS_s_axi_U->WVALID(s_axi_SPECS_WVALID);
    color_hist_SPECS_s_axi_U->WREADY(s_axi_SPECS_WREADY);
    color_hist_SPECS_s_axi_U->WDATA(s_axi_SPECS_WDATA);
    color_hist_SPECS_s_axi_U->WSTRB(s_axi_SPECS_WSTRB);
    color_hist_SPECS_s_axi_U->ARVALID(s_axi_SPECS_ARVALID);
    color_hist_SPECS_s_axi_U->ARREADY(s_axi_SPECS_ARREADY);
    color_hist_SPECS_s_axi_U->ARADDR(s_axi_SPECS_ARADDR);
    color_hist_SPECS_s_axi_U->RVALID(s_axi_SPECS_RVALID);
    color_hist_SPECS_s_axi_U->RREADY(s_axi_SPECS_RREADY);
    color_hist_SPECS_s_axi_U->RDATA(s_axi_SPECS_RDATA);
    color_hist_SPECS_s_axi_U->RRESP(s_axi_SPECS_RRESP);
    color_hist_SPECS_s_axi_U->BVALID(s_axi_SPECS_BVALID);
    color_hist_SPECS_s_axi_U->BREADY(s_axi_SPECS_BREADY);
    color_hist_SPECS_s_axi_U->BRESP(s_axi_SPECS_BRESP);
    color_hist_SPECS_s_axi_U->ACLK(ap_clk);
    color_hist_SPECS_s_axi_U->ARESET(ap_rst_n_inv);
    color_hist_SPECS_s_axi_U->ACLK_EN(ap_var_for_const0);
    color_hist_SPECS_s_axi_U->specs_address0(specs_address0);
    color_hist_SPECS_s_axi_U->specs_ce0(specs_ce0);
    color_hist_SPECS_s_axi_U->specs_q0(specs_q0);
    color_hist_INPUT_IMAGE_m_axi_U = new color_hist_INPUT_IMAGE_m_axi<8,32,5,16,16,16,16,C_M_AXI_INPUT_IMAGE_ID_WIDTH,C_M_AXI_INPUT_IMAGE_ADDR_WIDTH,C_M_AXI_INPUT_IMAGE_DATA_WIDTH,C_M_AXI_INPUT_IMAGE_AWUSER_WIDTH,C_M_AXI_INPUT_IMAGE_ARUSER_WIDTH,C_M_AXI_INPUT_IMAGE_WUSER_WIDTH,C_M_AXI_INPUT_IMAGE_RUSER_WIDTH,C_M_AXI_INPUT_IMAGE_BUSER_WIDTH,C_M_AXI_INPUT_IMAGE_USER_VALUE,C_M_AXI_INPUT_IMAGE_PROT_VALUE,C_M_AXI_INPUT_IMAGE_CACHE_VALUE>("color_hist_INPUT_IMAGE_m_axi_U");
    color_hist_INPUT_IMAGE_m_axi_U->AWVALID(m_axi_INPUT_IMAGE_AWVALID);
    color_hist_INPUT_IMAGE_m_axi_U->AWREADY(m_axi_INPUT_IMAGE_AWREADY);
    color_hist_INPUT_IMAGE_m_axi_U->AWADDR(m_axi_INPUT_IMAGE_AWADDR);
    color_hist_INPUT_IMAGE_m_axi_U->AWID(m_axi_INPUT_IMAGE_AWID);
    color_hist_INPUT_IMAGE_m_axi_U->AWLEN(m_axi_INPUT_IMAGE_AWLEN);
    color_hist_INPUT_IMAGE_m_axi_U->AWSIZE(m_axi_INPUT_IMAGE_AWSIZE);
    color_hist_INPUT_IMAGE_m_axi_U->AWBURST(m_axi_INPUT_IMAGE_AWBURST);
    color_hist_INPUT_IMAGE_m_axi_U->AWLOCK(m_axi_INPUT_IMAGE_AWLOCK);
    color_hist_INPUT_IMAGE_m_axi_U->AWCACHE(m_axi_INPUT_IMAGE_AWCACHE);
    color_hist_INPUT_IMAGE_m_axi_U->AWPROT(m_axi_INPUT_IMAGE_AWPROT);
    color_hist_INPUT_IMAGE_m_axi_U->AWQOS(m_axi_INPUT_IMAGE_AWQOS);
    color_hist_INPUT_IMAGE_m_axi_U->AWREGION(m_axi_INPUT_IMAGE_AWREGION);
    color_hist_INPUT_IMAGE_m_axi_U->AWUSER(m_axi_INPUT_IMAGE_AWUSER);
    color_hist_INPUT_IMAGE_m_axi_U->WVALID(m_axi_INPUT_IMAGE_WVALID);
    color_hist_INPUT_IMAGE_m_axi_U->WREADY(m_axi_INPUT_IMAGE_WREADY);
    color_hist_INPUT_IMAGE_m_axi_U->WDATA(m_axi_INPUT_IMAGE_WDATA);
    color_hist_INPUT_IMAGE_m_axi_U->WSTRB(m_axi_INPUT_IMAGE_WSTRB);
    color_hist_INPUT_IMAGE_m_axi_U->WLAST(m_axi_INPUT_IMAGE_WLAST);
    color_hist_INPUT_IMAGE_m_axi_U->WID(m_axi_INPUT_IMAGE_WID);
    color_hist_INPUT_IMAGE_m_axi_U->WUSER(m_axi_INPUT_IMAGE_WUSER);
    color_hist_INPUT_IMAGE_m_axi_U->ARVALID(m_axi_INPUT_IMAGE_ARVALID);
    color_hist_INPUT_IMAGE_m_axi_U->ARREADY(m_axi_INPUT_IMAGE_ARREADY);
    color_hist_INPUT_IMAGE_m_axi_U->ARADDR(m_axi_INPUT_IMAGE_ARADDR);
    color_hist_INPUT_IMAGE_m_axi_U->ARID(m_axi_INPUT_IMAGE_ARID);
    color_hist_INPUT_IMAGE_m_axi_U->ARLEN(m_axi_INPUT_IMAGE_ARLEN);
    color_hist_INPUT_IMAGE_m_axi_U->ARSIZE(m_axi_INPUT_IMAGE_ARSIZE);
    color_hist_INPUT_IMAGE_m_axi_U->ARBURST(m_axi_INPUT_IMAGE_ARBURST);
    color_hist_INPUT_IMAGE_m_axi_U->ARLOCK(m_axi_INPUT_IMAGE_ARLOCK);
    color_hist_INPUT_IMAGE_m_axi_U->ARCACHE(m_axi_INPUT_IMAGE_ARCACHE);
    color_hist_INPUT_IMAGE_m_axi_U->ARPROT(m_axi_INPUT_IMAGE_ARPROT);
    color_hist_INPUT_IMAGE_m_axi_U->ARQOS(m_axi_INPUT_IMAGE_ARQOS);
    color_hist_INPUT_IMAGE_m_axi_U->ARREGION(m_axi_INPUT_IMAGE_ARREGION);
    color_hist_INPUT_IMAGE_m_axi_U->ARUSER(m_axi_INPUT_IMAGE_ARUSER);
    color_hist_INPUT_IMAGE_m_axi_U->RVALID(m_axi_INPUT_IMAGE_RVALID);
    color_hist_INPUT_IMAGE_m_axi_U->RREADY(m_axi_INPUT_IMAGE_RREADY);
    color_hist_INPUT_IMAGE_m_axi_U->RDATA(m_axi_INPUT_IMAGE_RDATA);
    color_hist_INPUT_IMAGE_m_axi_U->RLAST(m_axi_INPUT_IMAGE_RLAST);
    color_hist_INPUT_IMAGE_m_axi_U->RID(m_axi_INPUT_IMAGE_RID);
    color_hist_INPUT_IMAGE_m_axi_U->RUSER(m_axi_INPUT_IMAGE_RUSER);
    color_hist_INPUT_IMAGE_m_axi_U->RRESP(m_axi_INPUT_IMAGE_RRESP);
    color_hist_INPUT_IMAGE_m_axi_U->BVALID(m_axi_INPUT_IMAGE_BVALID);
    color_hist_INPUT_IMAGE_m_axi_U->BREADY(m_axi_INPUT_IMAGE_BREADY);
    color_hist_INPUT_IMAGE_m_axi_U->BRESP(m_axi_INPUT_IMAGE_BRESP);
    color_hist_INPUT_IMAGE_m_axi_U->BID(m_axi_INPUT_IMAGE_BID);
    color_hist_INPUT_IMAGE_m_axi_U->BUSER(m_axi_INPUT_IMAGE_BUSER);
    color_hist_INPUT_IMAGE_m_axi_U->ACLK(ap_clk);
    color_hist_INPUT_IMAGE_m_axi_U->ARESET(ap_rst_n_inv);
    color_hist_INPUT_IMAGE_m_axi_U->ACLK_EN(ap_var_for_const0);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARVALID(INPUT_IMAGE_ARVALID);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARREADY(INPUT_IMAGE_ARREADY);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARADDR(ap_reg_pp0_iter14_INPUT_IMAGE_addr_reg_1049);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARID(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARLEN(ap_var_for_const2);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARSIZE(ap_var_for_const3);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARLOCK(ap_var_for_const4);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARCACHE(ap_var_for_const5);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARQOS(ap_var_for_const5);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARPROT(ap_var_for_const3);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARUSER(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARBURST(ap_var_for_const4);
    color_hist_INPUT_IMAGE_m_axi_U->I_ARREGION(ap_var_for_const5);
    color_hist_INPUT_IMAGE_m_axi_U->I_RVALID(INPUT_IMAGE_RVALID);
    color_hist_INPUT_IMAGE_m_axi_U->I_RREADY(INPUT_IMAGE_RREADY);
    color_hist_INPUT_IMAGE_m_axi_U->I_RDATA(INPUT_IMAGE_RDATA);
    color_hist_INPUT_IMAGE_m_axi_U->I_RID(INPUT_IMAGE_RID);
    color_hist_INPUT_IMAGE_m_axi_U->I_RUSER(INPUT_IMAGE_RUSER);
    color_hist_INPUT_IMAGE_m_axi_U->I_RRESP(INPUT_IMAGE_RRESP);
    color_hist_INPUT_IMAGE_m_axi_U->I_RLAST(INPUT_IMAGE_RLAST);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWVALID(ap_var_for_const6);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWREADY(INPUT_IMAGE_AWREADY);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWADDR(ap_var_for_const7);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWID(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWLEN(ap_var_for_const7);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWSIZE(ap_var_for_const3);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWLOCK(ap_var_for_const4);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWCACHE(ap_var_for_const5);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWQOS(ap_var_for_const5);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWPROT(ap_var_for_const3);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWUSER(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWBURST(ap_var_for_const4);
    color_hist_INPUT_IMAGE_m_axi_U->I_AWREGION(ap_var_for_const5);
    color_hist_INPUT_IMAGE_m_axi_U->I_WVALID(ap_var_for_const6);
    color_hist_INPUT_IMAGE_m_axi_U->I_WREADY(INPUT_IMAGE_WREADY);
    color_hist_INPUT_IMAGE_m_axi_U->I_WDATA(ap_var_for_const8);
    color_hist_INPUT_IMAGE_m_axi_U->I_WID(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_WUSER(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_WLAST(ap_var_for_const6);
    color_hist_INPUT_IMAGE_m_axi_U->I_WSTRB(ap_var_for_const1);
    color_hist_INPUT_IMAGE_m_axi_U->I_BVALID(INPUT_IMAGE_BVALID);
    color_hist_INPUT_IMAGE_m_axi_U->I_BREADY(ap_var_for_const6);
    color_hist_INPUT_IMAGE_m_axi_U->I_BRESP(INPUT_IMAGE_BRESP);
    color_hist_INPUT_IMAGE_m_axi_U->I_BID(INPUT_IMAGE_BID);
    color_hist_INPUT_IMAGE_m_axi_U->I_BUSER(INPUT_IMAGE_BUSER);
    color_hist_FEATURE_m_axi_U = new color_hist_FEATURE_m_axi<16,32,5,16,16,16,16,C_M_AXI_FEATURE_ID_WIDTH,C_M_AXI_FEATURE_ADDR_WIDTH,C_M_AXI_FEATURE_DATA_WIDTH,C_M_AXI_FEATURE_AWUSER_WIDTH,C_M_AXI_FEATURE_ARUSER_WIDTH,C_M_AXI_FEATURE_WUSER_WIDTH,C_M_AXI_FEATURE_RUSER_WIDTH,C_M_AXI_FEATURE_BUSER_WIDTH,C_M_AXI_FEATURE_USER_VALUE,C_M_AXI_FEATURE_PROT_VALUE,C_M_AXI_FEATURE_CACHE_VALUE>("color_hist_FEATURE_m_axi_U");
    color_hist_FEATURE_m_axi_U->AWVALID(m_axi_FEATURE_AWVALID);
    color_hist_FEATURE_m_axi_U->AWREADY(m_axi_FEATURE_AWREADY);
    color_hist_FEATURE_m_axi_U->AWADDR(m_axi_FEATURE_AWADDR);
    color_hist_FEATURE_m_axi_U->AWID(m_axi_FEATURE_AWID);
    color_hist_FEATURE_m_axi_U->AWLEN(m_axi_FEATURE_AWLEN);
    color_hist_FEATURE_m_axi_U->AWSIZE(m_axi_FEATURE_AWSIZE);
    color_hist_FEATURE_m_axi_U->AWBURST(m_axi_FEATURE_AWBURST);
    color_hist_FEATURE_m_axi_U->AWLOCK(m_axi_FEATURE_AWLOCK);
    color_hist_FEATURE_m_axi_U->AWCACHE(m_axi_FEATURE_AWCACHE);
    color_hist_FEATURE_m_axi_U->AWPROT(m_axi_FEATURE_AWPROT);
    color_hist_FEATURE_m_axi_U->AWQOS(m_axi_FEATURE_AWQOS);
    color_hist_FEATURE_m_axi_U->AWREGION(m_axi_FEATURE_AWREGION);
    color_hist_FEATURE_m_axi_U->AWUSER(m_axi_FEATURE_AWUSER);
    color_hist_FEATURE_m_axi_U->WVALID(m_axi_FEATURE_WVALID);
    color_hist_FEATURE_m_axi_U->WREADY(m_axi_FEATURE_WREADY);
    color_hist_FEATURE_m_axi_U->WDATA(m_axi_FEATURE_WDATA);
    color_hist_FEATURE_m_axi_U->WSTRB(m_axi_FEATURE_WSTRB);
    color_hist_FEATURE_m_axi_U->WLAST(m_axi_FEATURE_WLAST);
    color_hist_FEATURE_m_axi_U->WID(m_axi_FEATURE_WID);
    color_hist_FEATURE_m_axi_U->WUSER(m_axi_FEATURE_WUSER);
    color_hist_FEATURE_m_axi_U->ARVALID(m_axi_FEATURE_ARVALID);
    color_hist_FEATURE_m_axi_U->ARREADY(m_axi_FEATURE_ARREADY);
    color_hist_FEATURE_m_axi_U->ARADDR(m_axi_FEATURE_ARADDR);
    color_hist_FEATURE_m_axi_U->ARID(m_axi_FEATURE_ARID);
    color_hist_FEATURE_m_axi_U->ARLEN(m_axi_FEATURE_ARLEN);
    color_hist_FEATURE_m_axi_U->ARSIZE(m_axi_FEATURE_ARSIZE);
    color_hist_FEATURE_m_axi_U->ARBURST(m_axi_FEATURE_ARBURST);
    color_hist_FEATURE_m_axi_U->ARLOCK(m_axi_FEATURE_ARLOCK);
    color_hist_FEATURE_m_axi_U->ARCACHE(m_axi_FEATURE_ARCACHE);
    color_hist_FEATURE_m_axi_U->ARPROT(m_axi_FEATURE_ARPROT);
    color_hist_FEATURE_m_axi_U->ARQOS(m_axi_FEATURE_ARQOS);
    color_hist_FEATURE_m_axi_U->ARREGION(m_axi_FEATURE_ARREGION);
    color_hist_FEATURE_m_axi_U->ARUSER(m_axi_FEATURE_ARUSER);
    color_hist_FEATURE_m_axi_U->RVALID(m_axi_FEATURE_RVALID);
    color_hist_FEATURE_m_axi_U->RREADY(m_axi_FEATURE_RREADY);
    color_hist_FEATURE_m_axi_U->RDATA(m_axi_FEATURE_RDATA);
    color_hist_FEATURE_m_axi_U->RLAST(m_axi_FEATURE_RLAST);
    color_hist_FEATURE_m_axi_U->RID(m_axi_FEATURE_RID);
    color_hist_FEATURE_m_axi_U->RUSER(m_axi_FEATURE_RUSER);
    color_hist_FEATURE_m_axi_U->RRESP(m_axi_FEATURE_RRESP);
    color_hist_FEATURE_m_axi_U->BVALID(m_axi_FEATURE_BVALID);
    color_hist_FEATURE_m_axi_U->BREADY(m_axi_FEATURE_BREADY);
    color_hist_FEATURE_m_axi_U->BRESP(m_axi_FEATURE_BRESP);
    color_hist_FEATURE_m_axi_U->BID(m_axi_FEATURE_BID);
    color_hist_FEATURE_m_axi_U->BUSER(m_axi_FEATURE_BUSER);
    color_hist_FEATURE_m_axi_U->ACLK(ap_clk);
    color_hist_FEATURE_m_axi_U->ARESET(ap_rst_n_inv);
    color_hist_FEATURE_m_axi_U->ACLK_EN(ap_var_for_const0);
    color_hist_FEATURE_m_axi_U->I_ARVALID(ap_var_for_const6);
    color_hist_FEATURE_m_axi_U->I_ARREADY(FEATURE_ARREADY);
    color_hist_FEATURE_m_axi_U->I_ARADDR(ap_var_for_const7);
    color_hist_FEATURE_m_axi_U->I_ARID(ap_var_for_const1);
    color_hist_FEATURE_m_axi_U->I_ARLEN(ap_var_for_const7);
    color_hist_FEATURE_m_axi_U->I_ARSIZE(ap_var_for_const3);
    color_hist_FEATURE_m_axi_U->I_ARLOCK(ap_var_for_const4);
    color_hist_FEATURE_m_axi_U->I_ARCACHE(ap_var_for_const5);
    color_hist_FEATURE_m_axi_U->I_ARQOS(ap_var_for_const5);
    color_hist_FEATURE_m_axi_U->I_ARPROT(ap_var_for_const3);
    color_hist_FEATURE_m_axi_U->I_ARUSER(ap_var_for_const1);
    color_hist_FEATURE_m_axi_U->I_ARBURST(ap_var_for_const4);
    color_hist_FEATURE_m_axi_U->I_ARREGION(ap_var_for_const5);
    color_hist_FEATURE_m_axi_U->I_RVALID(FEATURE_RVALID);
    color_hist_FEATURE_m_axi_U->I_RREADY(ap_var_for_const6);
    color_hist_FEATURE_m_axi_U->I_RDATA(FEATURE_RDATA);
    color_hist_FEATURE_m_axi_U->I_RID(FEATURE_RID);
    color_hist_FEATURE_m_axi_U->I_RUSER(FEATURE_RUSER);
    color_hist_FEATURE_m_axi_U->I_RRESP(FEATURE_RRESP);
    color_hist_FEATURE_m_axi_U->I_RLAST(FEATURE_RLAST);
    color_hist_FEATURE_m_axi_U->I_AWVALID(FEATURE_AWVALID);
    color_hist_FEATURE_m_axi_U->I_AWREADY(FEATURE_AWREADY);
    color_hist_FEATURE_m_axi_U->I_AWADDR(FEATURE_addr_reg_956);
    color_hist_FEATURE_m_axi_U->I_AWID(ap_var_for_const1);
    color_hist_FEATURE_m_axi_U->I_AWLEN(ap_var_for_const9);
    color_hist_FEATURE_m_axi_U->I_AWSIZE(ap_var_for_const3);
    color_hist_FEATURE_m_axi_U->I_AWLOCK(ap_var_for_const4);
    color_hist_FEATURE_m_axi_U->I_AWCACHE(ap_var_for_const5);
    color_hist_FEATURE_m_axi_U->I_AWQOS(ap_var_for_const5);
    color_hist_FEATURE_m_axi_U->I_AWPROT(ap_var_for_const3);
    color_hist_FEATURE_m_axi_U->I_AWUSER(ap_var_for_const1);
    color_hist_FEATURE_m_axi_U->I_AWBURST(ap_var_for_const4);
    color_hist_FEATURE_m_axi_U->I_AWREGION(ap_var_for_const5);
    color_hist_FEATURE_m_axi_U->I_WVALID(FEATURE_WVALID);
    color_hist_FEATURE_m_axi_U->I_WREADY(FEATURE_WREADY);
    color_hist_FEATURE_m_axi_U->I_WDATA(rst_load_reg_1110);
    color_hist_FEATURE_m_axi_U->I_WID(ap_var_for_const1);
    color_hist_FEATURE_m_axi_U->I_WUSER(ap_var_for_const1);
    color_hist_FEATURE_m_axi_U->I_WLAST(ap_var_for_const6);
    color_hist_FEATURE_m_axi_U->I_WSTRB(ap_var_for_const10);
    color_hist_FEATURE_m_axi_U->I_BVALID(FEATURE_BVALID);
    color_hist_FEATURE_m_axi_U->I_BREADY(FEATURE_BREADY);
    color_hist_FEATURE_m_axi_U->I_BRESP(FEATURE_BRESP);
    color_hist_FEATURE_m_axi_U->I_BID(FEATURE_BID);
    color_hist_FEATURE_m_axi_U->I_BUSER(FEATURE_BUSER);
    image_buffer_0_U = new color_hist_image_cud("image_buffer_0_U");
    image_buffer_0_U->clk(ap_clk);
    image_buffer_0_U->reset(ap_rst_n_inv);
    image_buffer_0_U->address0(image_buffer_0_address0);
    image_buffer_0_U->ce0(image_buffer_0_ce0);
    image_buffer_0_U->we0(image_buffer_0_we0);
    image_buffer_0_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_0_U->q0(image_buffer_0_q0);
    image_buffer_1_U = new color_hist_image_cud("image_buffer_1_U");
    image_buffer_1_U->clk(ap_clk);
    image_buffer_1_U->reset(ap_rst_n_inv);
    image_buffer_1_U->address0(image_buffer_1_address0);
    image_buffer_1_U->ce0(image_buffer_1_ce0);
    image_buffer_1_U->we0(image_buffer_1_we0);
    image_buffer_1_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_1_U->q0(image_buffer_1_q0);
    image_buffer_2_U = new color_hist_image_cud("image_buffer_2_U");
    image_buffer_2_U->clk(ap_clk);
    image_buffer_2_U->reset(ap_rst_n_inv);
    image_buffer_2_U->address0(image_buffer_2_address0);
    image_buffer_2_U->ce0(image_buffer_2_ce0);
    image_buffer_2_U->we0(image_buffer_2_we0);
    image_buffer_2_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_2_U->q0(image_buffer_2_q0);
    image_buffer_3_U = new color_hist_image_cud("image_buffer_3_U");
    image_buffer_3_U->clk(ap_clk);
    image_buffer_3_U->reset(ap_rst_n_inv);
    image_buffer_3_U->address0(image_buffer_3_address0);
    image_buffer_3_U->ce0(image_buffer_3_ce0);
    image_buffer_3_U->we0(image_buffer_3_we0);
    image_buffer_3_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_3_U->q0(image_buffer_3_q0);
    image_buffer_4_U = new color_hist_image_cud("image_buffer_4_U");
    image_buffer_4_U->clk(ap_clk);
    image_buffer_4_U->reset(ap_rst_n_inv);
    image_buffer_4_U->address0(image_buffer_4_address0);
    image_buffer_4_U->ce0(image_buffer_4_ce0);
    image_buffer_4_U->we0(image_buffer_4_we0);
    image_buffer_4_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_4_U->q0(image_buffer_4_q0);
    image_buffer_5_U = new color_hist_image_cud("image_buffer_5_U");
    image_buffer_5_U->clk(ap_clk);
    image_buffer_5_U->reset(ap_rst_n_inv);
    image_buffer_5_U->address0(image_buffer_5_address0);
    image_buffer_5_U->ce0(image_buffer_5_ce0);
    image_buffer_5_U->we0(image_buffer_5_we0);
    image_buffer_5_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_5_U->q0(image_buffer_5_q0);
    image_buffer_6_U = new color_hist_image_cud("image_buffer_6_U");
    image_buffer_6_U->clk(ap_clk);
    image_buffer_6_U->reset(ap_rst_n_inv);
    image_buffer_6_U->address0(image_buffer_6_address0);
    image_buffer_6_U->ce0(image_buffer_6_ce0);
    image_buffer_6_U->we0(image_buffer_6_we0);
    image_buffer_6_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_6_U->q0(image_buffer_6_q0);
    image_buffer_7_U = new color_hist_image_cud("image_buffer_7_U");
    image_buffer_7_U->clk(ap_clk);
    image_buffer_7_U->reset(ap_rst_n_inv);
    image_buffer_7_U->address0(image_buffer_7_address0);
    image_buffer_7_U->ce0(image_buffer_7_ce0);
    image_buffer_7_U->we0(image_buffer_7_we0);
    image_buffer_7_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_7_U->q0(image_buffer_7_q0);
    image_buffer_8_U = new color_hist_image_cud("image_buffer_8_U");
    image_buffer_8_U->clk(ap_clk);
    image_buffer_8_U->reset(ap_rst_n_inv);
    image_buffer_8_U->address0(image_buffer_8_address0);
    image_buffer_8_U->ce0(image_buffer_8_ce0);
    image_buffer_8_U->we0(image_buffer_8_we0);
    image_buffer_8_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_8_U->q0(image_buffer_8_q0);
    image_buffer_9_U = new color_hist_image_cud("image_buffer_9_U");
    image_buffer_9_U->clk(ap_clk);
    image_buffer_9_U->reset(ap_rst_n_inv);
    image_buffer_9_U->address0(image_buffer_9_address0);
    image_buffer_9_U->ce0(image_buffer_9_ce0);
    image_buffer_9_U->we0(image_buffer_9_we0);
    image_buffer_9_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_9_U->q0(image_buffer_9_q0);
    image_buffer_10_U = new color_hist_image_cud("image_buffer_10_U");
    image_buffer_10_U->clk(ap_clk);
    image_buffer_10_U->reset(ap_rst_n_inv);
    image_buffer_10_U->address0(image_buffer_10_address0);
    image_buffer_10_U->ce0(image_buffer_10_ce0);
    image_buffer_10_U->we0(image_buffer_10_we0);
    image_buffer_10_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_10_U->q0(image_buffer_10_q0);
    image_buffer_11_U = new color_hist_image_cud("image_buffer_11_U");
    image_buffer_11_U->clk(ap_clk);
    image_buffer_11_U->reset(ap_rst_n_inv);
    image_buffer_11_U->address0(image_buffer_11_address0);
    image_buffer_11_U->ce0(image_buffer_11_ce0);
    image_buffer_11_U->we0(image_buffer_11_we0);
    image_buffer_11_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_11_U->q0(image_buffer_11_q0);
    image_buffer_12_U = new color_hist_image_cud("image_buffer_12_U");
    image_buffer_12_U->clk(ap_clk);
    image_buffer_12_U->reset(ap_rst_n_inv);
    image_buffer_12_U->address0(image_buffer_12_address0);
    image_buffer_12_U->ce0(image_buffer_12_ce0);
    image_buffer_12_U->we0(image_buffer_12_we0);
    image_buffer_12_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_12_U->q0(image_buffer_12_q0);
    image_buffer_13_U = new color_hist_image_cud("image_buffer_13_U");
    image_buffer_13_U->clk(ap_clk);
    image_buffer_13_U->reset(ap_rst_n_inv);
    image_buffer_13_U->address0(image_buffer_13_address0);
    image_buffer_13_U->ce0(image_buffer_13_ce0);
    image_buffer_13_U->we0(image_buffer_13_we0);
    image_buffer_13_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_13_U->q0(image_buffer_13_q0);
    image_buffer_14_U = new color_hist_image_cud("image_buffer_14_U");
    image_buffer_14_U->clk(ap_clk);
    image_buffer_14_U->reset(ap_rst_n_inv);
    image_buffer_14_U->address0(image_buffer_14_address0);
    image_buffer_14_U->ce0(image_buffer_14_ce0);
    image_buffer_14_U->we0(image_buffer_14_we0);
    image_buffer_14_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_14_U->q0(image_buffer_14_q0);
    image_buffer_15_U = new color_hist_image_cud("image_buffer_15_U");
    image_buffer_15_U->clk(ap_clk);
    image_buffer_15_U->reset(ap_rst_n_inv);
    image_buffer_15_U->address0(image_buffer_15_address0);
    image_buffer_15_U->ce0(image_buffer_15_ce0);
    image_buffer_15_U->we0(image_buffer_15_we0);
    image_buffer_15_U->d0(INPUT_IMAGE_addr_rea_reg_1063);
    image_buffer_15_U->q0(image_buffer_15_q0);
    rst_U = new color_hist_rst("rst_U");
    rst_U->clk(ap_clk);
    rst_U->reset(ap_rst_n_inv);
    rst_U->address0(rst_address0);
    rst_U->ce0(rst_ce0);
    rst_U->we0(rst_we0);
    rst_U->d0(ap_var_for_const11);
    rst_U->q0(rst_q0);
    rst_U->address1(grp_calc_hist_fu_580_rst_address1);
    rst_U->ce1(rst_ce1);
    rst_U->we1(rst_we1);
    rst_U->d1(grp_calc_hist_fu_580_rst_d1);
    grp_calc_hist_fu_580 = new calc_hist("grp_calc_hist_fu_580");
    grp_calc_hist_fu_580->ap_clk(ap_clk);
    grp_calc_hist_fu_580->ap_rst(ap_rst_n_inv);
    grp_calc_hist_fu_580->ap_start(grp_calc_hist_fu_580_ap_start);
    grp_calc_hist_fu_580->ap_done(grp_calc_hist_fu_580_ap_done);
    grp_calc_hist_fu_580->ap_idle(grp_calc_hist_fu_580_ap_idle);
    grp_calc_hist_fu_580->ap_ready(grp_calc_hist_fu_580_ap_ready);
    grp_calc_hist_fu_580->image_buffer_0_address0(grp_calc_hist_fu_580_image_buffer_0_address0);
    grp_calc_hist_fu_580->image_buffer_0_ce0(grp_calc_hist_fu_580_image_buffer_0_ce0);
    grp_calc_hist_fu_580->image_buffer_0_q0(image_buffer_0_q0);
    grp_calc_hist_fu_580->image_buffer_1_address0(grp_calc_hist_fu_580_image_buffer_1_address0);
    grp_calc_hist_fu_580->image_buffer_1_ce0(grp_calc_hist_fu_580_image_buffer_1_ce0);
    grp_calc_hist_fu_580->image_buffer_1_q0(image_buffer_1_q0);
    grp_calc_hist_fu_580->image_buffer_2_address0(grp_calc_hist_fu_580_image_buffer_2_address0);
    grp_calc_hist_fu_580->image_buffer_2_ce0(grp_calc_hist_fu_580_image_buffer_2_ce0);
    grp_calc_hist_fu_580->image_buffer_2_q0(image_buffer_2_q0);
    grp_calc_hist_fu_580->image_buffer_3_address0(grp_calc_hist_fu_580_image_buffer_3_address0);
    grp_calc_hist_fu_580->image_buffer_3_ce0(grp_calc_hist_fu_580_image_buffer_3_ce0);
    grp_calc_hist_fu_580->image_buffer_3_q0(image_buffer_3_q0);
    grp_calc_hist_fu_580->image_buffer_4_address0(grp_calc_hist_fu_580_image_buffer_4_address0);
    grp_calc_hist_fu_580->image_buffer_4_ce0(grp_calc_hist_fu_580_image_buffer_4_ce0);
    grp_calc_hist_fu_580->image_buffer_4_q0(image_buffer_4_q0);
    grp_calc_hist_fu_580->image_buffer_5_address0(grp_calc_hist_fu_580_image_buffer_5_address0);
    grp_calc_hist_fu_580->image_buffer_5_ce0(grp_calc_hist_fu_580_image_buffer_5_ce0);
    grp_calc_hist_fu_580->image_buffer_5_q0(image_buffer_5_q0);
    grp_calc_hist_fu_580->image_buffer_6_address0(grp_calc_hist_fu_580_image_buffer_6_address0);
    grp_calc_hist_fu_580->image_buffer_6_ce0(grp_calc_hist_fu_580_image_buffer_6_ce0);
    grp_calc_hist_fu_580->image_buffer_6_q0(image_buffer_6_q0);
    grp_calc_hist_fu_580->image_buffer_7_address0(grp_calc_hist_fu_580_image_buffer_7_address0);
    grp_calc_hist_fu_580->image_buffer_7_ce0(grp_calc_hist_fu_580_image_buffer_7_ce0);
    grp_calc_hist_fu_580->image_buffer_7_q0(image_buffer_7_q0);
    grp_calc_hist_fu_580->image_buffer_8_address0(grp_calc_hist_fu_580_image_buffer_8_address0);
    grp_calc_hist_fu_580->image_buffer_8_ce0(grp_calc_hist_fu_580_image_buffer_8_ce0);
    grp_calc_hist_fu_580->image_buffer_8_q0(image_buffer_8_q0);
    grp_calc_hist_fu_580->image_buffer_9_address0(grp_calc_hist_fu_580_image_buffer_9_address0);
    grp_calc_hist_fu_580->image_buffer_9_ce0(grp_calc_hist_fu_580_image_buffer_9_ce0);
    grp_calc_hist_fu_580->image_buffer_9_q0(image_buffer_9_q0);
    grp_calc_hist_fu_580->image_buffer_10_address0(grp_calc_hist_fu_580_image_buffer_10_address0);
    grp_calc_hist_fu_580->image_buffer_10_ce0(grp_calc_hist_fu_580_image_buffer_10_ce0);
    grp_calc_hist_fu_580->image_buffer_10_q0(image_buffer_10_q0);
    grp_calc_hist_fu_580->image_buffer_11_address0(grp_calc_hist_fu_580_image_buffer_11_address0);
    grp_calc_hist_fu_580->image_buffer_11_ce0(grp_calc_hist_fu_580_image_buffer_11_ce0);
    grp_calc_hist_fu_580->image_buffer_11_q0(image_buffer_11_q0);
    grp_calc_hist_fu_580->image_buffer_12_address0(grp_calc_hist_fu_580_image_buffer_12_address0);
    grp_calc_hist_fu_580->image_buffer_12_ce0(grp_calc_hist_fu_580_image_buffer_12_ce0);
    grp_calc_hist_fu_580->image_buffer_12_q0(image_buffer_12_q0);
    grp_calc_hist_fu_580->image_buffer_13_address0(grp_calc_hist_fu_580_image_buffer_13_address0);
    grp_calc_hist_fu_580->image_buffer_13_ce0(grp_calc_hist_fu_580_image_buffer_13_ce0);
    grp_calc_hist_fu_580->image_buffer_13_q0(image_buffer_13_q0);
    grp_calc_hist_fu_580->image_buffer_14_address0(grp_calc_hist_fu_580_image_buffer_14_address0);
    grp_calc_hist_fu_580->image_buffer_14_ce0(grp_calc_hist_fu_580_image_buffer_14_ce0);
    grp_calc_hist_fu_580->image_buffer_14_q0(image_buffer_14_q0);
    grp_calc_hist_fu_580->image_buffer_15_address0(grp_calc_hist_fu_580_image_buffer_15_address0);
    grp_calc_hist_fu_580->image_buffer_15_ce0(grp_calc_hist_fu_580_image_buffer_15_ce0);
    grp_calc_hist_fu_580->image_buffer_15_q0(image_buffer_15_q0);
    grp_calc_hist_fu_580->rst_address0(grp_calc_hist_fu_580_rst_address0);
    grp_calc_hist_fu_580->rst_ce0(grp_calc_hist_fu_580_rst_ce0);
    grp_calc_hist_fu_580->rst_q0(rst_q0);
    grp_calc_hist_fu_580->rst_address1(grp_calc_hist_fu_580_rst_address1);
    grp_calc_hist_fu_580->rst_ce1(grp_calc_hist_fu_580_rst_ce1);
    grp_calc_hist_fu_580->rst_we1(grp_calc_hist_fu_580_rst_we1);
    grp_calc_hist_fu_580->rst_d1(grp_calc_hist_fu_580_rst_d1);
    color_hist_urem_1sc4_U20 = new color_hist_urem_1sc4<1,15,11,8,11>("color_hist_urem_1sc4_U20");
    color_hist_urem_1sc4_U20->clk(ap_clk);
    color_hist_urem_1sc4_U20->reset(ap_rst_n_inv);
    color_hist_urem_1sc4_U20->din0(ap_phi_mux_indvar_flatten_phi_fu_528_p4);
    color_hist_urem_1sc4_U20->din1(grp_fu_765_p1);
    color_hist_urem_1sc4_U20->ce(grp_fu_765_ce);
    color_hist_urem_1sc4_U20->dout(grp_fu_765_p2);
    color_hist_mul_32tde_U21 = new color_hist_mul_32tde<1,5,32,32,32>("color_hist_mul_32tde_U21");
    color_hist_mul_32tde_U21->clk(ap_clk);
    color_hist_mul_32tde_U21->reset(ap_rst_n_inv);
    color_hist_mul_32tde_U21->din0(tmp_reg_973);
    color_hist_mul_32tde_U21->din1(original_width_reg_967);
    color_hist_mul_32tde_U21->ce(grp_fu_771_ce);
    color_hist_mul_32tde_U21->dout(grp_fu_771_p2);
    color_hist_mul_32tde_U22 = new color_hist_mul_32tde<1,5,32,32,32>("color_hist_mul_32tde_U22");
    color_hist_mul_32tde_U22->clk(ap_clk);
    color_hist_mul_32tde_U22->reset(ap_rst_n_inv);
    color_hist_mul_32tde_U22->din0(tmp_mid1_reg_997);
    color_hist_mul_32tde_U22->din1(original_width_reg_967);
    color_hist_mul_32tde_U22->ce(grp_fu_775_ce);
    color_hist_mul_32tde_U22->dout(grp_fu_775_p2);
    color_hist_urem_1udo_U23 = new color_hist_urem_1udo<1,18,14,8,14>("color_hist_urem_1udo_U23");
    color_hist_urem_1udo_U23->clk(ap_clk);
    color_hist_urem_1udo_U23->reset(ap_rst_n_inv);
    color_hist_urem_1udo_U23->din0(ap_reg_pp0_iter4_tmp_9_reg_1017);
    color_hist_urem_1udo_U23->din1(grp_fu_794_p1);
    color_hist_urem_1udo_U23->ce(grp_fu_794_ce);
    color_hist_urem_1udo_U23->dout(grp_fu_794_p2);
    color_hist_mul_muvdy_U24 = new color_hist_mul_muvdy<1,3,14,16,30>("color_hist_mul_muvdy_U24");
    color_hist_mul_muvdy_U24->clk(ap_clk);
    color_hist_mul_muvdy_U24->reset(ap_rst_n_inv);
    color_hist_mul_muvdy_U24->din0(grp_fu_922_p0);
    color_hist_mul_muvdy_U24->din1(grp_fu_922_p1);
    color_hist_mul_muvdy_U24->ce(grp_fu_922_ce);
    color_hist_mul_muvdy_U24->dout(grp_fu_922_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FEATURE_AWVALID);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_calc_hist_fu_580_ap_done );
    sensitive << ( ap_reg_ioackin_FEATURE_AWREADY );

    SC_METHOD(thread_FEATURE_BREADY);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( FEATURE_BVALID );

    SC_METHOD(thread_FEATURE_WVALID);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_reg_pp1_iter1_exitcond2_reg_1096 );
    sensitive << ( ap_reg_ioackin_FEATURE_WREADY );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_FEATURE_blk_n_AW);
    sensitive << ( m_axi_FEATURE_AWREADY );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_FEATURE_blk_n_B);
    sensitive << ( m_axi_FEATURE_BVALID );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_FEATURE_blk_n_W);
    sensitive << ( m_axi_FEATURE_WREADY );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_reg_pp1_iter1_exitcond2_reg_1096 );

    SC_METHOD(thread_INPUT_IMAGE_ARVALID);
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( tmp_16_reg_1059 );
    sensitive << ( ap_reg_ioackin_INPUT_IMAGE_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_INPUT_IMAGE_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_INPUT_IMAGE_blk_n_AR);
    sensitive << ( m_axi_INPUT_IMAGE_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_reg_1059 );

    SC_METHOD(thread_INPUT_IMAGE_blk_n_R);
    sensitive << ( m_axi_INPUT_IMAGE_RVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter22 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( INPUT_IMAGE_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( INPUT_IMAGE_RVALID );
    sensitive << ( ap_block_state20_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( INPUT_IMAGE_RVALID );
    sensitive << ( ap_block_state20_io );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state20_io);
    sensitive << ( tmp_16_reg_1059 );
    sensitive << ( ap_sig_ioackin_INPUT_IMAGE_ARREADY );

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter22);
    sensitive << ( INPUT_IMAGE_RVALID );

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state33_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state34_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state35_io);
    sensitive << ( ap_reg_pp1_iter1_exitcond2_reg_1096 );
    sensitive << ( ap_sig_ioackin_FEATURE_WREADY );

    SC_METHOD(thread_ap_block_state35_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter6_state11);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state33);
    sensitive << ( exitcond2_fu_905_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( FEATURE_BVALID );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_528_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_524 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_978 );
    sensitive << ( indvar_flatten_next_reg_982 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( FEATURE_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_FEATURE_AWREADY);
    sensitive << ( FEATURE_AWREADY );
    sensitive << ( ap_reg_ioackin_FEATURE_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_FEATURE_WREADY);
    sensitive << ( FEATURE_WREADY );
    sensitive << ( ap_reg_ioackin_FEATURE_WREADY );

    SC_METHOD(thread_ap_sig_ioackin_INPUT_IMAGE_ARREADY);
    sensitive << ( INPUT_IMAGE_ARREADY );
    sensitive << ( ap_reg_ioackin_INPUT_IMAGE_ARREADY );

    SC_METHOD(thread_exitcond2_fu_905_p2);
    sensitive << ( indvar8_reg_569 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_668_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_528_p4 );

    SC_METHOD(thread_exitcond_fu_680_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( indvar_reg_547 );
    sensitive << ( exitcond_flatten_fu_668_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_feature3_fu_601_p4);
    sensitive << ( feature_r );

    SC_METHOD(thread_grp_calc_hist_fu_580_ap_start);
    sensitive << ( ap_reg_grp_calc_hist_fu_580_ap_start );

    SC_METHOD(thread_grp_fu_765_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_765_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_771_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_775_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_794_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_794_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_922_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_922_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( grp_fu_922_p00 );

    SC_METHOD(thread_grp_fu_922_p00);
    sensitive << ( ap_reg_pp0_iter4_tmp_9_reg_1017 );

    SC_METHOD(thread_grp_fu_922_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_i_cast7_fu_625_p1);
    sensitive << ( i_reg_536 );

    SC_METHOD(thread_i_cast7_mid1_fu_700_p1);
    sensitive << ( i_s_fu_694_p2 );

    SC_METHOD(thread_i_mid2_fu_751_p3);
    sensitive << ( i_reg_536 );
    sensitive << ( exitcond_fu_680_p2 );
    sensitive << ( i_s_fu_694_p2 );

    SC_METHOD(thread_i_s_fu_694_p2);
    sensitive << ( i_reg_536 );

    SC_METHOD(thread_image_buffer_0_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_0_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_0_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_0_ce0 );

    SC_METHOD(thread_image_buffer_0_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_10_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_10_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_10_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_10_ce0 );

    SC_METHOD(thread_image_buffer_10_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_11_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_11_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_11_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_11_ce0 );

    SC_METHOD(thread_image_buffer_11_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_12_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_12_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_12_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_12_ce0 );

    SC_METHOD(thread_image_buffer_12_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_13_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_13_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_13_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_13_ce0 );

    SC_METHOD(thread_image_buffer_13_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_14_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_14_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_14_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_14_ce0 );

    SC_METHOD(thread_image_buffer_14_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_15_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_15_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_15_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_15_ce0 );

    SC_METHOD(thread_image_buffer_15_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_1_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_1_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_1_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_1_ce0 );

    SC_METHOD(thread_image_buffer_1_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_2_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_2_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_2_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_2_ce0 );

    SC_METHOD(thread_image_buffer_2_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_3_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_3_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_3_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_3_ce0 );

    SC_METHOD(thread_image_buffer_3_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_4_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_4_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_4_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_4_ce0 );

    SC_METHOD(thread_image_buffer_4_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_5_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_5_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_5_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_5_ce0 );

    SC_METHOD(thread_image_buffer_5_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_6_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_6_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_6_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_6_ce0 );

    SC_METHOD(thread_image_buffer_6_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_7_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_7_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_7_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_7_ce0 );

    SC_METHOD(thread_image_buffer_7_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_8_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_8_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_8_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_8_ce0 );

    SC_METHOD(thread_image_buffer_8_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_image_buffer_9_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_9_address0 );
    sensitive << ( tmp_s_fu_869_p1 );

    SC_METHOD(thread_image_buffer_9_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( grp_calc_hist_fu_580_image_buffer_9_ce0 );

    SC_METHOD(thread_image_buffer_9_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter22_tmp_t_reg_1055 );
    sensitive << ( ap_enable_reg_pp0_iter23 );

    SC_METHOD(thread_imageptr2_sum_cast_fu_844_p1);
    sensitive << ( imageptr2_sum_fu_839_p2 );

    SC_METHOD(thread_imageptr2_sum_fu_839_p2);
    sensitive << ( tmp_10_cast_reg_962 );
    sensitive << ( tmp_3_mid2_cast_fu_835_p1 );

    SC_METHOD(thread_indvar_cast4_cast_fu_782_p1);
    sensitive << ( indvar_mid2_reg_992 );

    SC_METHOD(thread_indvar_flatten_next_fu_674_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_528_p4 );

    SC_METHOD(thread_indvar_mid2_fu_686_p3);
    sensitive << ( indvar_reg_547 );
    sensitive << ( exitcond_fu_680_p2 );

    SC_METHOD(thread_indvar_next9_fu_911_p2);
    sensitive << ( indvar8_reg_569 );

    SC_METHOD(thread_indvar_next_fu_759_p2);
    sensitive << ( indvar_mid2_fu_686_p3 );

    SC_METHOD(thread_indvarinc_fu_888_p2);
    sensitive << ( invdar_reg_558 );

    SC_METHOD(thread_offset_fu_809_p2);
    sensitive << ( tmp_2_fu_799_p2 );
    sensitive << ( tmp_7_fu_803_p2 );

    SC_METHOD(thread_offset_mid1_fu_824_p2);
    sensitive << ( tmp_2_mid1_reg_1043 );
    sensitive << ( tmp_12_fu_819_p2 );

    SC_METHOD(thread_p_shl3_cast_fu_646_p1);
    sensitive << ( p_shl3_fu_638_p3 );

    SC_METHOD(thread_p_shl3_cast_mid1_fu_721_p1);
    sensitive << ( p_shl3_mid1_fu_713_p3 );

    SC_METHOD(thread_p_shl3_fu_638_p3);
    sensitive << ( tmp_10_fu_634_p1 );

    SC_METHOD(thread_p_shl3_mid1_fu_713_p3);
    sensitive << ( tmp_14_fu_709_p1 );

    SC_METHOD(thread_p_shl4_cast_fu_658_p1);
    sensitive << ( p_shl4_fu_650_p3 );

    SC_METHOD(thread_p_shl4_cast_mid1_fu_733_p1);
    sensitive << ( p_shl4_mid1_fu_725_p3 );

    SC_METHOD(thread_p_shl4_fu_650_p3);
    sensitive << ( tmp_10_fu_634_p1 );

    SC_METHOD(thread_p_shl4_mid1_fu_725_p3);
    sensitive << ( tmp_14_fu_709_p1 );

    SC_METHOD(thread_rst_address0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( grp_calc_hist_fu_580_rst_address0 );
    sensitive << ( tmp_4_fu_894_p1 );
    sensitive << ( tmp_11_fu_917_p1 );

    SC_METHOD(thread_rst_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( grp_calc_hist_fu_580_rst_ce0 );

    SC_METHOD(thread_rst_ce1);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_calc_hist_fu_580_rst_ce1 );

    SC_METHOD(thread_rst_we0);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_rst_we1);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_calc_hist_fu_580_rst_we1 );

    SC_METHOD(thread_specs_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_specs_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_10_cast_fu_621_p1);
    sensitive << ( imageptr );

    SC_METHOD(thread_tmp_10_fu_634_p1);
    sensitive << ( i_reg_536 );

    SC_METHOD(thread_tmp_11_fu_917_p1);
    sensitive << ( indvar8_reg_569 );

    SC_METHOD(thread_tmp_12_fu_819_p2);
    sensitive << ( tmp_2_mid1_reg_1043 );

    SC_METHOD(thread_tmp_13_fu_829_p3);
    sensitive << ( ap_reg_pp0_iter6_exitcond_reg_987 );
    sensitive << ( offset_reg_1038 );
    sensitive << ( offset_mid1_fu_824_p2 );

    SC_METHOD(thread_tmp_14_fu_709_p1);
    sensitive << ( i_s_fu_694_p2 );

    SC_METHOD(thread_tmp_16_fu_863_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter13_exitcond_flatten_reg_978 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( grp_fu_765_p2 );

    SC_METHOD(thread_tmp_2_fu_799_p2);
    sensitive << ( x_reg_945 );
    sensitive << ( tmp_1_reg_1023 );

    SC_METHOD(thread_tmp_2_mid1_fu_815_p2);
    sensitive << ( x_reg_945 );
    sensitive << ( tmp_1_mid1_reg_1028 );

    SC_METHOD(thread_tmp_3_fu_611_p1);
    sensitive << ( feature3_fu_601_p4 );

    SC_METHOD(thread_tmp_3_mid2_cast_fu_835_p1);
    sensitive << ( tmp_13_fu_829_p3 );

    SC_METHOD(thread_tmp_4_fu_894_p1);
    sensitive << ( invdar_reg_558 );

    SC_METHOD(thread_tmp_5_fu_899_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( invdar_reg_558 );

    SC_METHOD(thread_tmp_7_fu_803_p2);
    sensitive << ( tmp_2_fu_799_p2 );

    SC_METHOD(thread_tmp_8_cast_cast_mid2_1_fu_743_p3);
    sensitive << ( exitcond_fu_680_p2 );
    sensitive << ( tmp_8_mid1_fu_737_p2 );
    sensitive << ( tmp_8_fu_662_p2 );

    SC_METHOD(thread_tmp_8_cast_cast_mid2_fu_779_p1);
    sensitive << ( tmp_8_cast_cast_mid2_1_reg_1002 );

    SC_METHOD(thread_tmp_8_fu_662_p2);
    sensitive << ( p_shl3_cast_fu_646_p1 );
    sensitive << ( p_shl4_cast_fu_658_p1 );

    SC_METHOD(thread_tmp_8_mid1_fu_737_p2);
    sensitive << ( p_shl3_cast_mid1_fu_721_p1 );
    sensitive << ( p_shl4_cast_mid1_fu_733_p1 );

    SC_METHOD(thread_tmp_9_fu_785_p2);
    sensitive << ( tmp_8_cast_cast_mid2_fu_779_p1 );
    sensitive << ( indvar_cast4_cast_fu_782_p1 );

    SC_METHOD(thread_tmp_fu_629_p2);
    sensitive << ( y_reg_934 );
    sensitive << ( i_cast7_fu_625_p1 );

    SC_METHOD(thread_tmp_mid1_fu_704_p2);
    sensitive << ( y_reg_934 );
    sensitive << ( i_cast7_mid1_fu_700_p1 );

    SC_METHOD(thread_tmp_s_fu_869_p1);
    sensitive << ( tmp_6_reg_1083 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( FEATURE_BVALID );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond2_fu_905_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_sig_ioackin_FEATURE_AWREADY );
    sensitive << ( grp_calc_hist_fu_580_ap_done );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( tmp_5_fu_899_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const11);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "000000000000001";
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_reg_grp_calc_hist_fu_580_ap_start = SC_LOGIC_0;
    ap_reg_ioackin_INPUT_IMAGE_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_FEATURE_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_FEATURE_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "color_hist_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWVALID, "(port)m_axi_INPUT_IMAGE_AWVALID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWREADY, "(port)m_axi_INPUT_IMAGE_AWREADY");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWADDR, "(port)m_axi_INPUT_IMAGE_AWADDR");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWID, "(port)m_axi_INPUT_IMAGE_AWID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWLEN, "(port)m_axi_INPUT_IMAGE_AWLEN");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWSIZE, "(port)m_axi_INPUT_IMAGE_AWSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWBURST, "(port)m_axi_INPUT_IMAGE_AWBURST");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWLOCK, "(port)m_axi_INPUT_IMAGE_AWLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWCACHE, "(port)m_axi_INPUT_IMAGE_AWCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWPROT, "(port)m_axi_INPUT_IMAGE_AWPROT");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWQOS, "(port)m_axi_INPUT_IMAGE_AWQOS");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWREGION, "(port)m_axi_INPUT_IMAGE_AWREGION");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_AWUSER, "(port)m_axi_INPUT_IMAGE_AWUSER");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WVALID, "(port)m_axi_INPUT_IMAGE_WVALID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WREADY, "(port)m_axi_INPUT_IMAGE_WREADY");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WDATA, "(port)m_axi_INPUT_IMAGE_WDATA");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WSTRB, "(port)m_axi_INPUT_IMAGE_WSTRB");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WLAST, "(port)m_axi_INPUT_IMAGE_WLAST");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WID, "(port)m_axi_INPUT_IMAGE_WID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_WUSER, "(port)m_axi_INPUT_IMAGE_WUSER");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARVALID, "(port)m_axi_INPUT_IMAGE_ARVALID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARREADY, "(port)m_axi_INPUT_IMAGE_ARREADY");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARADDR, "(port)m_axi_INPUT_IMAGE_ARADDR");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARID, "(port)m_axi_INPUT_IMAGE_ARID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARLEN, "(port)m_axi_INPUT_IMAGE_ARLEN");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARSIZE, "(port)m_axi_INPUT_IMAGE_ARSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARBURST, "(port)m_axi_INPUT_IMAGE_ARBURST");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARLOCK, "(port)m_axi_INPUT_IMAGE_ARLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARCACHE, "(port)m_axi_INPUT_IMAGE_ARCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARPROT, "(port)m_axi_INPUT_IMAGE_ARPROT");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARQOS, "(port)m_axi_INPUT_IMAGE_ARQOS");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARREGION, "(port)m_axi_INPUT_IMAGE_ARREGION");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_ARUSER, "(port)m_axi_INPUT_IMAGE_ARUSER");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RVALID, "(port)m_axi_INPUT_IMAGE_RVALID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RREADY, "(port)m_axi_INPUT_IMAGE_RREADY");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RDATA, "(port)m_axi_INPUT_IMAGE_RDATA");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RLAST, "(port)m_axi_INPUT_IMAGE_RLAST");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RID, "(port)m_axi_INPUT_IMAGE_RID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RUSER, "(port)m_axi_INPUT_IMAGE_RUSER");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_RRESP, "(port)m_axi_INPUT_IMAGE_RRESP");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_BVALID, "(port)m_axi_INPUT_IMAGE_BVALID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_BREADY, "(port)m_axi_INPUT_IMAGE_BREADY");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_BRESP, "(port)m_axi_INPUT_IMAGE_BRESP");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_BID, "(port)m_axi_INPUT_IMAGE_BID");
    sc_trace(mVcdFile, m_axi_INPUT_IMAGE_BUSER, "(port)m_axi_INPUT_IMAGE_BUSER");
    sc_trace(mVcdFile, m_axi_FEATURE_AWVALID, "(port)m_axi_FEATURE_AWVALID");
    sc_trace(mVcdFile, m_axi_FEATURE_AWREADY, "(port)m_axi_FEATURE_AWREADY");
    sc_trace(mVcdFile, m_axi_FEATURE_AWADDR, "(port)m_axi_FEATURE_AWADDR");
    sc_trace(mVcdFile, m_axi_FEATURE_AWID, "(port)m_axi_FEATURE_AWID");
    sc_trace(mVcdFile, m_axi_FEATURE_AWLEN, "(port)m_axi_FEATURE_AWLEN");
    sc_trace(mVcdFile, m_axi_FEATURE_AWSIZE, "(port)m_axi_FEATURE_AWSIZE");
    sc_trace(mVcdFile, m_axi_FEATURE_AWBURST, "(port)m_axi_FEATURE_AWBURST");
    sc_trace(mVcdFile, m_axi_FEATURE_AWLOCK, "(port)m_axi_FEATURE_AWLOCK");
    sc_trace(mVcdFile, m_axi_FEATURE_AWCACHE, "(port)m_axi_FEATURE_AWCACHE");
    sc_trace(mVcdFile, m_axi_FEATURE_AWPROT, "(port)m_axi_FEATURE_AWPROT");
    sc_trace(mVcdFile, m_axi_FEATURE_AWQOS, "(port)m_axi_FEATURE_AWQOS");
    sc_trace(mVcdFile, m_axi_FEATURE_AWREGION, "(port)m_axi_FEATURE_AWREGION");
    sc_trace(mVcdFile, m_axi_FEATURE_AWUSER, "(port)m_axi_FEATURE_AWUSER");
    sc_trace(mVcdFile, m_axi_FEATURE_WVALID, "(port)m_axi_FEATURE_WVALID");
    sc_trace(mVcdFile, m_axi_FEATURE_WREADY, "(port)m_axi_FEATURE_WREADY");
    sc_trace(mVcdFile, m_axi_FEATURE_WDATA, "(port)m_axi_FEATURE_WDATA");
    sc_trace(mVcdFile, m_axi_FEATURE_WSTRB, "(port)m_axi_FEATURE_WSTRB");
    sc_trace(mVcdFile, m_axi_FEATURE_WLAST, "(port)m_axi_FEATURE_WLAST");
    sc_trace(mVcdFile, m_axi_FEATURE_WID, "(port)m_axi_FEATURE_WID");
    sc_trace(mVcdFile, m_axi_FEATURE_WUSER, "(port)m_axi_FEATURE_WUSER");
    sc_trace(mVcdFile, m_axi_FEATURE_ARVALID, "(port)m_axi_FEATURE_ARVALID");
    sc_trace(mVcdFile, m_axi_FEATURE_ARREADY, "(port)m_axi_FEATURE_ARREADY");
    sc_trace(mVcdFile, m_axi_FEATURE_ARADDR, "(port)m_axi_FEATURE_ARADDR");
    sc_trace(mVcdFile, m_axi_FEATURE_ARID, "(port)m_axi_FEATURE_ARID");
    sc_trace(mVcdFile, m_axi_FEATURE_ARLEN, "(port)m_axi_FEATURE_ARLEN");
    sc_trace(mVcdFile, m_axi_FEATURE_ARSIZE, "(port)m_axi_FEATURE_ARSIZE");
    sc_trace(mVcdFile, m_axi_FEATURE_ARBURST, "(port)m_axi_FEATURE_ARBURST");
    sc_trace(mVcdFile, m_axi_FEATURE_ARLOCK, "(port)m_axi_FEATURE_ARLOCK");
    sc_trace(mVcdFile, m_axi_FEATURE_ARCACHE, "(port)m_axi_FEATURE_ARCACHE");
    sc_trace(mVcdFile, m_axi_FEATURE_ARPROT, "(port)m_axi_FEATURE_ARPROT");
    sc_trace(mVcdFile, m_axi_FEATURE_ARQOS, "(port)m_axi_FEATURE_ARQOS");
    sc_trace(mVcdFile, m_axi_FEATURE_ARREGION, "(port)m_axi_FEATURE_ARREGION");
    sc_trace(mVcdFile, m_axi_FEATURE_ARUSER, "(port)m_axi_FEATURE_ARUSER");
    sc_trace(mVcdFile, m_axi_FEATURE_RVALID, "(port)m_axi_FEATURE_RVALID");
    sc_trace(mVcdFile, m_axi_FEATURE_RREADY, "(port)m_axi_FEATURE_RREADY");
    sc_trace(mVcdFile, m_axi_FEATURE_RDATA, "(port)m_axi_FEATURE_RDATA");
    sc_trace(mVcdFile, m_axi_FEATURE_RLAST, "(port)m_axi_FEATURE_RLAST");
    sc_trace(mVcdFile, m_axi_FEATURE_RID, "(port)m_axi_FEATURE_RID");
    sc_trace(mVcdFile, m_axi_FEATURE_RUSER, "(port)m_axi_FEATURE_RUSER");
    sc_trace(mVcdFile, m_axi_FEATURE_RRESP, "(port)m_axi_FEATURE_RRESP");
    sc_trace(mVcdFile, m_axi_FEATURE_BVALID, "(port)m_axi_FEATURE_BVALID");
    sc_trace(mVcdFile, m_axi_FEATURE_BREADY, "(port)m_axi_FEATURE_BREADY");
    sc_trace(mVcdFile, m_axi_FEATURE_BRESP, "(port)m_axi_FEATURE_BRESP");
    sc_trace(mVcdFile, m_axi_FEATURE_BID, "(port)m_axi_FEATURE_BID");
    sc_trace(mVcdFile, m_axi_FEATURE_BUSER, "(port)m_axi_FEATURE_BUSER");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWVALID, "(port)s_axi_CONTROL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWREADY, "(port)s_axi_CONTROL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWADDR, "(port)s_axi_CONTROL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WVALID, "(port)s_axi_CONTROL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WREADY, "(port)s_axi_CONTROL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WDATA, "(port)s_axi_CONTROL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WSTRB, "(port)s_axi_CONTROL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARVALID, "(port)s_axi_CONTROL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARREADY, "(port)s_axi_CONTROL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARADDR, "(port)s_axi_CONTROL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RVALID, "(port)s_axi_CONTROL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RREADY, "(port)s_axi_CONTROL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RDATA, "(port)s_axi_CONTROL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RRESP, "(port)s_axi_CONTROL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BVALID, "(port)s_axi_CONTROL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BREADY, "(port)s_axi_CONTROL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BRESP, "(port)s_axi_CONTROL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_SPECS_AWVALID, "(port)s_axi_SPECS_AWVALID");
    sc_trace(mVcdFile, s_axi_SPECS_AWREADY, "(port)s_axi_SPECS_AWREADY");
    sc_trace(mVcdFile, s_axi_SPECS_AWADDR, "(port)s_axi_SPECS_AWADDR");
    sc_trace(mVcdFile, s_axi_SPECS_WVALID, "(port)s_axi_SPECS_WVALID");
    sc_trace(mVcdFile, s_axi_SPECS_WREADY, "(port)s_axi_SPECS_WREADY");
    sc_trace(mVcdFile, s_axi_SPECS_WDATA, "(port)s_axi_SPECS_WDATA");
    sc_trace(mVcdFile, s_axi_SPECS_WSTRB, "(port)s_axi_SPECS_WSTRB");
    sc_trace(mVcdFile, s_axi_SPECS_ARVALID, "(port)s_axi_SPECS_ARVALID");
    sc_trace(mVcdFile, s_axi_SPECS_ARREADY, "(port)s_axi_SPECS_ARREADY");
    sc_trace(mVcdFile, s_axi_SPECS_ARADDR, "(port)s_axi_SPECS_ARADDR");
    sc_trace(mVcdFile, s_axi_SPECS_RVALID, "(port)s_axi_SPECS_RVALID");
    sc_trace(mVcdFile, s_axi_SPECS_RREADY, "(port)s_axi_SPECS_RREADY");
    sc_trace(mVcdFile, s_axi_SPECS_RDATA, "(port)s_axi_SPECS_RDATA");
    sc_trace(mVcdFile, s_axi_SPECS_RRESP, "(port)s_axi_SPECS_RRESP");
    sc_trace(mVcdFile, s_axi_SPECS_BVALID, "(port)s_axi_SPECS_BVALID");
    sc_trace(mVcdFile, s_axi_SPECS_BREADY, "(port)s_axi_SPECS_BREADY");
    sc_trace(mVcdFile, s_axi_SPECS_BRESP, "(port)s_axi_SPECS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, specs_address0, "specs_address0");
    sc_trace(mVcdFile, specs_ce0, "specs_ce0");
    sc_trace(mVcdFile, specs_q0, "specs_q0");
    sc_trace(mVcdFile, imageptr, "imageptr");
    sc_trace(mVcdFile, feature_r, "feature_r");
    sc_trace(mVcdFile, INPUT_IMAGE_blk_n_AR, "INPUT_IMAGE_blk_n_AR");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_16_reg_1059, "tmp_16_reg_1059");
    sc_trace(mVcdFile, INPUT_IMAGE_blk_n_R, "INPUT_IMAGE_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, FEATURE_blk_n_AW, "FEATURE_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, FEATURE_blk_n_W, "FEATURE_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond2_reg_1096, "exitcond2_reg_1096");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond2_reg_1096, "ap_reg_pp1_iter1_exitcond2_reg_1096");
    sc_trace(mVcdFile, FEATURE_blk_n_B, "FEATURE_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, INPUT_IMAGE_AWREADY, "INPUT_IMAGE_AWREADY");
    sc_trace(mVcdFile, INPUT_IMAGE_WREADY, "INPUT_IMAGE_WREADY");
    sc_trace(mVcdFile, INPUT_IMAGE_ARVALID, "INPUT_IMAGE_ARVALID");
    sc_trace(mVcdFile, INPUT_IMAGE_ARREADY, "INPUT_IMAGE_ARREADY");
    sc_trace(mVcdFile, INPUT_IMAGE_RVALID, "INPUT_IMAGE_RVALID");
    sc_trace(mVcdFile, INPUT_IMAGE_RREADY, "INPUT_IMAGE_RREADY");
    sc_trace(mVcdFile, INPUT_IMAGE_RDATA, "INPUT_IMAGE_RDATA");
    sc_trace(mVcdFile, INPUT_IMAGE_RLAST, "INPUT_IMAGE_RLAST");
    sc_trace(mVcdFile, INPUT_IMAGE_RID, "INPUT_IMAGE_RID");
    sc_trace(mVcdFile, INPUT_IMAGE_RUSER, "INPUT_IMAGE_RUSER");
    sc_trace(mVcdFile, INPUT_IMAGE_RRESP, "INPUT_IMAGE_RRESP");
    sc_trace(mVcdFile, INPUT_IMAGE_BVALID, "INPUT_IMAGE_BVALID");
    sc_trace(mVcdFile, INPUT_IMAGE_BRESP, "INPUT_IMAGE_BRESP");
    sc_trace(mVcdFile, INPUT_IMAGE_BID, "INPUT_IMAGE_BID");
    sc_trace(mVcdFile, INPUT_IMAGE_BUSER, "INPUT_IMAGE_BUSER");
    sc_trace(mVcdFile, FEATURE_AWVALID, "FEATURE_AWVALID");
    sc_trace(mVcdFile, FEATURE_AWREADY, "FEATURE_AWREADY");
    sc_trace(mVcdFile, FEATURE_WVALID, "FEATURE_WVALID");
    sc_trace(mVcdFile, FEATURE_WREADY, "FEATURE_WREADY");
    sc_trace(mVcdFile, FEATURE_ARREADY, "FEATURE_ARREADY");
    sc_trace(mVcdFile, FEATURE_RVALID, "FEATURE_RVALID");
    sc_trace(mVcdFile, FEATURE_RDATA, "FEATURE_RDATA");
    sc_trace(mVcdFile, FEATURE_RLAST, "FEATURE_RLAST");
    sc_trace(mVcdFile, FEATURE_RID, "FEATURE_RID");
    sc_trace(mVcdFile, FEATURE_RUSER, "FEATURE_RUSER");
    sc_trace(mVcdFile, FEATURE_RRESP, "FEATURE_RRESP");
    sc_trace(mVcdFile, FEATURE_BVALID, "FEATURE_BVALID");
    sc_trace(mVcdFile, FEATURE_BREADY, "FEATURE_BREADY");
    sc_trace(mVcdFile, FEATURE_BRESP, "FEATURE_BRESP");
    sc_trace(mVcdFile, FEATURE_BID, "FEATURE_BID");
    sc_trace(mVcdFile, FEATURE_BUSER, "FEATURE_BUSER");
    sc_trace(mVcdFile, indvar_flatten_reg_524, "indvar_flatten_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter2, "ap_block_state7_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter3, "ap_block_state8_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter4, "ap_block_state9_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter5, "ap_block_state10_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter6, "ap_block_state11_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter7, "ap_block_state12_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter8, "ap_block_state13_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter9, "ap_block_state14_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter10, "ap_block_state15_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter11, "ap_block_state16_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter12, "ap_block_state17_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter13, "ap_block_state18_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter14, "ap_block_state19_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter15, "ap_block_state20_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_sig_ioackin_INPUT_IMAGE_ARREADY, "ap_sig_ioackin_INPUT_IMAGE_ARREADY");
    sc_trace(mVcdFile, ap_block_state20_io, "ap_block_state20_io");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter16, "ap_block_state21_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter17, "ap_block_state22_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter18, "ap_block_state23_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter19, "ap_block_state24_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter20, "ap_block_state25_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter21, "ap_block_state26_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter22, "ap_block_state27_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter23, "ap_block_state28_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_reg_536, "i_reg_536");
    sc_trace(mVcdFile, indvar_reg_547, "indvar_reg_547");
    sc_trace(mVcdFile, indvar8_reg_569, "indvar8_reg_569");
    sc_trace(mVcdFile, y_reg_934, "y_reg_934");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, x_reg_945, "x_reg_945");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, FEATURE_addr_reg_956, "FEATURE_addr_reg_956");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_10_cast_fu_621_p1, "tmp_10_cast_fu_621_p1");
    sc_trace(mVcdFile, tmp_10_cast_reg_962, "tmp_10_cast_reg_962");
    sc_trace(mVcdFile, original_width_reg_967, "original_width_reg_967");
    sc_trace(mVcdFile, tmp_fu_629_p2, "tmp_fu_629_p2");
    sc_trace(mVcdFile, tmp_reg_973, "tmp_reg_973");
    sc_trace(mVcdFile, exitcond_flatten_fu_668_p2, "exitcond_flatten_fu_668_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_978, "exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_978, "ap_reg_pp0_iter1_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_978, "ap_reg_pp0_iter2_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_978, "ap_reg_pp0_iter3_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_flatten_reg_978, "ap_reg_pp0_iter4_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_flatten_reg_978, "ap_reg_pp0_iter5_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_flatten_reg_978, "ap_reg_pp0_iter6_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_flatten_reg_978, "ap_reg_pp0_iter7_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_flatten_reg_978, "ap_reg_pp0_iter8_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_flatten_reg_978, "ap_reg_pp0_iter9_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_flatten_reg_978, "ap_reg_pp0_iter10_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_flatten_reg_978, "ap_reg_pp0_iter11_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_flatten_reg_978, "ap_reg_pp0_iter12_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_flatten_reg_978, "ap_reg_pp0_iter13_exitcond_flatten_reg_978");
    sc_trace(mVcdFile, indvar_flatten_next_fu_674_p2, "indvar_flatten_next_fu_674_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_982, "indvar_flatten_next_reg_982");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_fu_680_p2, "exitcond_fu_680_p2");
    sc_trace(mVcdFile, exitcond_reg_987, "exitcond_reg_987");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_987, "ap_reg_pp0_iter1_exitcond_reg_987");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_reg_987, "ap_reg_pp0_iter2_exitcond_reg_987");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_reg_987, "ap_reg_pp0_iter3_exitcond_reg_987");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_reg_987, "ap_reg_pp0_iter4_exitcond_reg_987");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_reg_987, "ap_reg_pp0_iter5_exitcond_reg_987");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_reg_987, "ap_reg_pp0_iter6_exitcond_reg_987");
    sc_trace(mVcdFile, indvar_mid2_fu_686_p3, "indvar_mid2_fu_686_p3");
    sc_trace(mVcdFile, indvar_mid2_reg_992, "indvar_mid2_reg_992");
    sc_trace(mVcdFile, tmp_mid1_fu_704_p2, "tmp_mid1_fu_704_p2");
    sc_trace(mVcdFile, tmp_mid1_reg_997, "tmp_mid1_reg_997");
    sc_trace(mVcdFile, tmp_8_cast_cast_mid2_1_fu_743_p3, "tmp_8_cast_cast_mid2_1_fu_743_p3");
    sc_trace(mVcdFile, tmp_8_cast_cast_mid2_1_reg_1002, "tmp_8_cast_cast_mid2_1_reg_1002");
    sc_trace(mVcdFile, i_mid2_fu_751_p3, "i_mid2_fu_751_p3");
    sc_trace(mVcdFile, indvar_next_fu_759_p2, "indvar_next_fu_759_p2");
    sc_trace(mVcdFile, tmp_9_fu_785_p2, "tmp_9_fu_785_p2");
    sc_trace(mVcdFile, tmp_9_reg_1017, "tmp_9_reg_1017");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_9_reg_1017, "ap_reg_pp0_iter2_tmp_9_reg_1017");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_9_reg_1017, "ap_reg_pp0_iter3_tmp_9_reg_1017");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_tmp_9_reg_1017, "ap_reg_pp0_iter4_tmp_9_reg_1017");
    sc_trace(mVcdFile, grp_fu_771_p2, "grp_fu_771_p2");
    sc_trace(mVcdFile, tmp_1_reg_1023, "tmp_1_reg_1023");
    sc_trace(mVcdFile, grp_fu_775_p2, "grp_fu_775_p2");
    sc_trace(mVcdFile, tmp_1_mid1_reg_1028, "tmp_1_mid1_reg_1028");
    sc_trace(mVcdFile, offset_fu_809_p2, "offset_fu_809_p2");
    sc_trace(mVcdFile, offset_reg_1038, "offset_reg_1038");
    sc_trace(mVcdFile, tmp_2_mid1_fu_815_p2, "tmp_2_mid1_fu_815_p2");
    sc_trace(mVcdFile, tmp_2_mid1_reg_1043, "tmp_2_mid1_reg_1043");
    sc_trace(mVcdFile, INPUT_IMAGE_addr_reg_1049, "INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter8_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter9_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter10_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter11_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter12_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter13_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_INPUT_IMAGE_addr_reg_1049, "ap_reg_pp0_iter14_INPUT_IMAGE_addr_reg_1049");
    sc_trace(mVcdFile, tmp_t_reg_1055, "tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_tmp_t_reg_1055, "ap_reg_pp0_iter8_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_tmp_t_reg_1055, "ap_reg_pp0_iter9_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_tmp_t_reg_1055, "ap_reg_pp0_iter10_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_tmp_t_reg_1055, "ap_reg_pp0_iter11_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_tmp_t_reg_1055, "ap_reg_pp0_iter12_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_tmp_t_reg_1055, "ap_reg_pp0_iter13_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_tmp_t_reg_1055, "ap_reg_pp0_iter14_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_tmp_t_reg_1055, "ap_reg_pp0_iter15_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_tmp_t_reg_1055, "ap_reg_pp0_iter16_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_tmp_t_reg_1055, "ap_reg_pp0_iter17_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_tmp_t_reg_1055, "ap_reg_pp0_iter18_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter19_tmp_t_reg_1055, "ap_reg_pp0_iter19_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter20_tmp_t_reg_1055, "ap_reg_pp0_iter20_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter21_tmp_t_reg_1055, "ap_reg_pp0_iter21_tmp_t_reg_1055");
    sc_trace(mVcdFile, ap_reg_pp0_iter22_tmp_t_reg_1055, "ap_reg_pp0_iter22_tmp_t_reg_1055");
    sc_trace(mVcdFile, tmp_16_fu_863_p2, "tmp_16_fu_863_p2");
    sc_trace(mVcdFile, INPUT_IMAGE_addr_rea_reg_1063, "INPUT_IMAGE_addr_rea_reg_1063");
    sc_trace(mVcdFile, grp_fu_794_p2, "grp_fu_794_p2");
    sc_trace(mVcdFile, tmp_6_reg_1083, "tmp_6_reg_1083");
    sc_trace(mVcdFile, indvarinc_fu_888_p2, "indvarinc_fu_888_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, exitcond2_fu_905_p2, "exitcond2_fu_905_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state33_pp1_stage0_iter0, "ap_block_state33_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state34_pp1_stage0_iter1, "ap_block_state34_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state35_pp1_stage0_iter2, "ap_block_state35_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_FEATURE_WREADY, "ap_sig_ioackin_FEATURE_WREADY");
    sc_trace(mVcdFile, ap_block_state35_io, "ap_block_state35_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, indvar_next9_fu_911_p2, "indvar_next9_fu_911_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, rst_q0, "rst_q0");
    sc_trace(mVcdFile, rst_load_reg_1110, "rst_load_reg_1110");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter6_state11, "ap_condition_pp0_exit_iter6_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_sig_ioackin_FEATURE_AWREADY, "ap_sig_ioackin_FEATURE_AWREADY");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_ap_done, "grp_calc_hist_fu_580_ap_done");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state33, "ap_condition_pp1_exit_iter0_state33");
    sc_trace(mVcdFile, image_buffer_0_address0, "image_buffer_0_address0");
    sc_trace(mVcdFile, image_buffer_0_ce0, "image_buffer_0_ce0");
    sc_trace(mVcdFile, image_buffer_0_we0, "image_buffer_0_we0");
    sc_trace(mVcdFile, image_buffer_0_q0, "image_buffer_0_q0");
    sc_trace(mVcdFile, image_buffer_1_address0, "image_buffer_1_address0");
    sc_trace(mVcdFile, image_buffer_1_ce0, "image_buffer_1_ce0");
    sc_trace(mVcdFile, image_buffer_1_we0, "image_buffer_1_we0");
    sc_trace(mVcdFile, image_buffer_1_q0, "image_buffer_1_q0");
    sc_trace(mVcdFile, image_buffer_2_address0, "image_buffer_2_address0");
    sc_trace(mVcdFile, image_buffer_2_ce0, "image_buffer_2_ce0");
    sc_trace(mVcdFile, image_buffer_2_we0, "image_buffer_2_we0");
    sc_trace(mVcdFile, image_buffer_2_q0, "image_buffer_2_q0");
    sc_trace(mVcdFile, image_buffer_3_address0, "image_buffer_3_address0");
    sc_trace(mVcdFile, image_buffer_3_ce0, "image_buffer_3_ce0");
    sc_trace(mVcdFile, image_buffer_3_we0, "image_buffer_3_we0");
    sc_trace(mVcdFile, image_buffer_3_q0, "image_buffer_3_q0");
    sc_trace(mVcdFile, image_buffer_4_address0, "image_buffer_4_address0");
    sc_trace(mVcdFile, image_buffer_4_ce0, "image_buffer_4_ce0");
    sc_trace(mVcdFile, image_buffer_4_we0, "image_buffer_4_we0");
    sc_trace(mVcdFile, image_buffer_4_q0, "image_buffer_4_q0");
    sc_trace(mVcdFile, image_buffer_5_address0, "image_buffer_5_address0");
    sc_trace(mVcdFile, image_buffer_5_ce0, "image_buffer_5_ce0");
    sc_trace(mVcdFile, image_buffer_5_we0, "image_buffer_5_we0");
    sc_trace(mVcdFile, image_buffer_5_q0, "image_buffer_5_q0");
    sc_trace(mVcdFile, image_buffer_6_address0, "image_buffer_6_address0");
    sc_trace(mVcdFile, image_buffer_6_ce0, "image_buffer_6_ce0");
    sc_trace(mVcdFile, image_buffer_6_we0, "image_buffer_6_we0");
    sc_trace(mVcdFile, image_buffer_6_q0, "image_buffer_6_q0");
    sc_trace(mVcdFile, image_buffer_7_address0, "image_buffer_7_address0");
    sc_trace(mVcdFile, image_buffer_7_ce0, "image_buffer_7_ce0");
    sc_trace(mVcdFile, image_buffer_7_we0, "image_buffer_7_we0");
    sc_trace(mVcdFile, image_buffer_7_q0, "image_buffer_7_q0");
    sc_trace(mVcdFile, image_buffer_8_address0, "image_buffer_8_address0");
    sc_trace(mVcdFile, image_buffer_8_ce0, "image_buffer_8_ce0");
    sc_trace(mVcdFile, image_buffer_8_we0, "image_buffer_8_we0");
    sc_trace(mVcdFile, image_buffer_8_q0, "image_buffer_8_q0");
    sc_trace(mVcdFile, image_buffer_9_address0, "image_buffer_9_address0");
    sc_trace(mVcdFile, image_buffer_9_ce0, "image_buffer_9_ce0");
    sc_trace(mVcdFile, image_buffer_9_we0, "image_buffer_9_we0");
    sc_trace(mVcdFile, image_buffer_9_q0, "image_buffer_9_q0");
    sc_trace(mVcdFile, image_buffer_10_address0, "image_buffer_10_address0");
    sc_trace(mVcdFile, image_buffer_10_ce0, "image_buffer_10_ce0");
    sc_trace(mVcdFile, image_buffer_10_we0, "image_buffer_10_we0");
    sc_trace(mVcdFile, image_buffer_10_q0, "image_buffer_10_q0");
    sc_trace(mVcdFile, image_buffer_11_address0, "image_buffer_11_address0");
    sc_trace(mVcdFile, image_buffer_11_ce0, "image_buffer_11_ce0");
    sc_trace(mVcdFile, image_buffer_11_we0, "image_buffer_11_we0");
    sc_trace(mVcdFile, image_buffer_11_q0, "image_buffer_11_q0");
    sc_trace(mVcdFile, image_buffer_12_address0, "image_buffer_12_address0");
    sc_trace(mVcdFile, image_buffer_12_ce0, "image_buffer_12_ce0");
    sc_trace(mVcdFile, image_buffer_12_we0, "image_buffer_12_we0");
    sc_trace(mVcdFile, image_buffer_12_q0, "image_buffer_12_q0");
    sc_trace(mVcdFile, image_buffer_13_address0, "image_buffer_13_address0");
    sc_trace(mVcdFile, image_buffer_13_ce0, "image_buffer_13_ce0");
    sc_trace(mVcdFile, image_buffer_13_we0, "image_buffer_13_we0");
    sc_trace(mVcdFile, image_buffer_13_q0, "image_buffer_13_q0");
    sc_trace(mVcdFile, image_buffer_14_address0, "image_buffer_14_address0");
    sc_trace(mVcdFile, image_buffer_14_ce0, "image_buffer_14_ce0");
    sc_trace(mVcdFile, image_buffer_14_we0, "image_buffer_14_we0");
    sc_trace(mVcdFile, image_buffer_14_q0, "image_buffer_14_q0");
    sc_trace(mVcdFile, image_buffer_15_address0, "image_buffer_15_address0");
    sc_trace(mVcdFile, image_buffer_15_ce0, "image_buffer_15_ce0");
    sc_trace(mVcdFile, image_buffer_15_we0, "image_buffer_15_we0");
    sc_trace(mVcdFile, image_buffer_15_q0, "image_buffer_15_q0");
    sc_trace(mVcdFile, rst_address0, "rst_address0");
    sc_trace(mVcdFile, rst_ce0, "rst_ce0");
    sc_trace(mVcdFile, rst_we0, "rst_we0");
    sc_trace(mVcdFile, rst_ce1, "rst_ce1");
    sc_trace(mVcdFile, rst_we1, "rst_we1");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_ap_start, "grp_calc_hist_fu_580_ap_start");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_ap_idle, "grp_calc_hist_fu_580_ap_idle");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_ap_ready, "grp_calc_hist_fu_580_ap_ready");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_0_address0, "grp_calc_hist_fu_580_image_buffer_0_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_0_ce0, "grp_calc_hist_fu_580_image_buffer_0_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_1_address0, "grp_calc_hist_fu_580_image_buffer_1_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_1_ce0, "grp_calc_hist_fu_580_image_buffer_1_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_2_address0, "grp_calc_hist_fu_580_image_buffer_2_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_2_ce0, "grp_calc_hist_fu_580_image_buffer_2_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_3_address0, "grp_calc_hist_fu_580_image_buffer_3_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_3_ce0, "grp_calc_hist_fu_580_image_buffer_3_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_4_address0, "grp_calc_hist_fu_580_image_buffer_4_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_4_ce0, "grp_calc_hist_fu_580_image_buffer_4_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_5_address0, "grp_calc_hist_fu_580_image_buffer_5_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_5_ce0, "grp_calc_hist_fu_580_image_buffer_5_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_6_address0, "grp_calc_hist_fu_580_image_buffer_6_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_6_ce0, "grp_calc_hist_fu_580_image_buffer_6_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_7_address0, "grp_calc_hist_fu_580_image_buffer_7_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_7_ce0, "grp_calc_hist_fu_580_image_buffer_7_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_8_address0, "grp_calc_hist_fu_580_image_buffer_8_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_8_ce0, "grp_calc_hist_fu_580_image_buffer_8_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_9_address0, "grp_calc_hist_fu_580_image_buffer_9_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_9_ce0, "grp_calc_hist_fu_580_image_buffer_9_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_10_address0, "grp_calc_hist_fu_580_image_buffer_10_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_10_ce0, "grp_calc_hist_fu_580_image_buffer_10_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_11_address0, "grp_calc_hist_fu_580_image_buffer_11_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_11_ce0, "grp_calc_hist_fu_580_image_buffer_11_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_12_address0, "grp_calc_hist_fu_580_image_buffer_12_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_12_ce0, "grp_calc_hist_fu_580_image_buffer_12_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_13_address0, "grp_calc_hist_fu_580_image_buffer_13_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_13_ce0, "grp_calc_hist_fu_580_image_buffer_13_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_14_address0, "grp_calc_hist_fu_580_image_buffer_14_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_14_ce0, "grp_calc_hist_fu_580_image_buffer_14_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_15_address0, "grp_calc_hist_fu_580_image_buffer_15_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_image_buffer_15_ce0, "grp_calc_hist_fu_580_image_buffer_15_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_rst_address0, "grp_calc_hist_fu_580_rst_address0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_rst_ce0, "grp_calc_hist_fu_580_rst_ce0");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_rst_address1, "grp_calc_hist_fu_580_rst_address1");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_rst_ce1, "grp_calc_hist_fu_580_rst_ce1");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_rst_we1, "grp_calc_hist_fu_580_rst_we1");
    sc_trace(mVcdFile, grp_calc_hist_fu_580_rst_d1, "grp_calc_hist_fu_580_rst_d1");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_528_p4, "ap_phi_mux_indvar_flatten_phi_fu_528_p4");
    sc_trace(mVcdFile, invdar_reg_558, "invdar_reg_558");
    sc_trace(mVcdFile, tmp_5_fu_899_p2, "tmp_5_fu_899_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_reg_grp_calc_hist_fu_580_ap_start, "ap_reg_grp_calc_hist_fu_580_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, tmp_s_fu_869_p1, "tmp_s_fu_869_p1");
    sc_trace(mVcdFile, tmp_4_fu_894_p1, "tmp_4_fu_894_p1");
    sc_trace(mVcdFile, tmp_11_fu_917_p1, "tmp_11_fu_917_p1");
    sc_trace(mVcdFile, tmp_3_fu_611_p1, "tmp_3_fu_611_p1");
    sc_trace(mVcdFile, imageptr2_sum_cast_fu_844_p1, "imageptr2_sum_cast_fu_844_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_INPUT_IMAGE_ARREADY, "ap_reg_ioackin_INPUT_IMAGE_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_FEATURE_AWREADY, "ap_reg_ioackin_FEATURE_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_FEATURE_WREADY, "ap_reg_ioackin_FEATURE_WREADY");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, feature3_fu_601_p4, "feature3_fu_601_p4");
    sc_trace(mVcdFile, i_cast7_fu_625_p1, "i_cast7_fu_625_p1");
    sc_trace(mVcdFile, tmp_10_fu_634_p1, "tmp_10_fu_634_p1");
    sc_trace(mVcdFile, p_shl3_fu_638_p3, "p_shl3_fu_638_p3");
    sc_trace(mVcdFile, p_shl4_fu_650_p3, "p_shl4_fu_650_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_646_p1, "p_shl3_cast_fu_646_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_658_p1, "p_shl4_cast_fu_658_p1");
    sc_trace(mVcdFile, i_s_fu_694_p2, "i_s_fu_694_p2");
    sc_trace(mVcdFile, i_cast7_mid1_fu_700_p1, "i_cast7_mid1_fu_700_p1");
    sc_trace(mVcdFile, tmp_14_fu_709_p1, "tmp_14_fu_709_p1");
    sc_trace(mVcdFile, p_shl3_mid1_fu_713_p3, "p_shl3_mid1_fu_713_p3");
    sc_trace(mVcdFile, p_shl4_mid1_fu_725_p3, "p_shl4_mid1_fu_725_p3");
    sc_trace(mVcdFile, p_shl3_cast_mid1_fu_721_p1, "p_shl3_cast_mid1_fu_721_p1");
    sc_trace(mVcdFile, p_shl4_cast_mid1_fu_733_p1, "p_shl4_cast_mid1_fu_733_p1");
    sc_trace(mVcdFile, tmp_8_mid1_fu_737_p2, "tmp_8_mid1_fu_737_p2");
    sc_trace(mVcdFile, tmp_8_fu_662_p2, "tmp_8_fu_662_p2");
    sc_trace(mVcdFile, grp_fu_765_p1, "grp_fu_765_p1");
    sc_trace(mVcdFile, tmp_8_cast_cast_mid2_fu_779_p1, "tmp_8_cast_cast_mid2_fu_779_p1");
    sc_trace(mVcdFile, indvar_cast4_cast_fu_782_p1, "indvar_cast4_cast_fu_782_p1");
    sc_trace(mVcdFile, grp_fu_794_p1, "grp_fu_794_p1");
    sc_trace(mVcdFile, tmp_2_fu_799_p2, "tmp_2_fu_799_p2");
    sc_trace(mVcdFile, tmp_7_fu_803_p2, "tmp_7_fu_803_p2");
    sc_trace(mVcdFile, tmp_12_fu_819_p2, "tmp_12_fu_819_p2");
    sc_trace(mVcdFile, offset_mid1_fu_824_p2, "offset_mid1_fu_824_p2");
    sc_trace(mVcdFile, tmp_13_fu_829_p3, "tmp_13_fu_829_p3");
    sc_trace(mVcdFile, tmp_3_mid2_cast_fu_835_p1, "tmp_3_mid2_cast_fu_835_p1");
    sc_trace(mVcdFile, imageptr2_sum_fu_839_p2, "imageptr2_sum_fu_839_p2");
    sc_trace(mVcdFile, grp_fu_922_p2, "grp_fu_922_p2");
    sc_trace(mVcdFile, grp_fu_765_p2, "grp_fu_765_p2");
    sc_trace(mVcdFile, grp_fu_922_p0, "grp_fu_922_p0");
    sc_trace(mVcdFile, grp_fu_922_p1, "grp_fu_922_p1");
    sc_trace(mVcdFile, grp_fu_765_ce, "grp_fu_765_ce");
    sc_trace(mVcdFile, grp_fu_771_ce, "grp_fu_771_ce");
    sc_trace(mVcdFile, grp_fu_775_ce, "grp_fu_775_ce");
    sc_trace(mVcdFile, grp_fu_794_ce, "grp_fu_794_ce");
    sc_trace(mVcdFile, grp_fu_922_ce, "grp_fu_922_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, grp_fu_922_p00, "grp_fu_922_p00");
#endif

    }
    mHdltvinHandle.open("color_hist.hdltvin.dat");
    mHdltvoutHandle.open("color_hist.hdltvout.dat");
}

color_hist::~color_hist() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete color_hist_CONTROL_BUS_s_axi_U;
    delete color_hist_SPECS_s_axi_U;
    delete color_hist_INPUT_IMAGE_m_axi_U;
    delete color_hist_FEATURE_m_axi_U;
    delete image_buffer_0_U;
    delete image_buffer_1_U;
    delete image_buffer_2_U;
    delete image_buffer_3_U;
    delete image_buffer_4_U;
    delete image_buffer_5_U;
    delete image_buffer_6_U;
    delete image_buffer_7_U;
    delete image_buffer_8_U;
    delete image_buffer_9_U;
    delete image_buffer_10_U;
    delete image_buffer_11_U;
    delete image_buffer_12_U;
    delete image_buffer_13_U;
    delete image_buffer_14_U;
    delete image_buffer_15_U;
    delete rst_U;
    delete grp_calc_hist_fu_580;
    delete color_hist_urem_1sc4_U20;
    delete color_hist_mul_32tde_U21;
    delete color_hist_mul_32tde_U22;
    delete color_hist_urem_1udo_U23;
    delete color_hist_mul_muvdy_U24;
}

void color_hist::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void color_hist::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void color_hist::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void color_hist::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void color_hist::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_60;
}

void color_hist::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void color_hist::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void color_hist::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void color_hist::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv32_24;
}

void color_hist::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv2_3;
}

void color_hist::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv16_0;
}

void color_hist::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv8_0;
}

void color_hist::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_668_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp0_iter23 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter6_state11.read())) {
                ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter5.read();
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state33.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_FEATURE_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_calc_hist_fu_580_ap_done.read())))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state33.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state33.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_FEATURE_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_calc_hist_fu_580_ap_done.read())))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_calc_hist_fu_580_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            ap_reg_grp_calc_hist_fu_580_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_calc_hist_fu_580_ap_ready.read())) {
            ap_reg_grp_calc_hist_fu_580_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_FEATURE_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_FEATURE_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_calc_hist_fu_580_ap_done.read()))) {
                ap_reg_ioackin_FEATURE_AWREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, FEATURE_AWREADY.read()) && 
                        esl_seteq<1,1,1>(grp_calc_hist_fu_580_ap_done.read(), ap_const_logic_1))) {
                ap_reg_ioackin_FEATURE_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_FEATURE_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_reg_pp1_iter1_exitcond2_reg_1096.read(), ap_const_lv1_0))) {
            if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_FEATURE_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, FEATURE_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_FEATURE_WREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_INPUT_IMAGE_ARREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && esl_seteq<1,1,1>(tmp_16_reg_1059.read(), ap_const_lv1_1))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_INPUT_IMAGE_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, INPUT_IMAGE_ARREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_INPUT_IMAGE_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_668_p2.read()))) {
        i_reg_536 = i_mid2_fu_751_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_536 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_905_p2.read()))) {
        indvar8_reg_569 = indvar_next9_fu_911_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_FEATURE_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_calc_hist_fu_580_ap_done.read())))) {
        indvar8_reg_569 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_978.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_524 = indvar_flatten_next_reg_982.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_flatten_reg_524 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_668_p2.read()))) {
        indvar_reg_547 = indvar_next_fu_759_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_reg_547 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        invdar_reg_558 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_899_p2.read()))) {
        invdar_reg_558 = indvarinc_fu_888_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FEATURE_addr_reg_956 =  (sc_lv<32>) (tmp_3_fu_611_p1.read());
        original_width_reg_967 = specs_q0.read();
        tmp_10_cast_reg_962 = tmp_10_cast_fu_621_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        INPUT_IMAGE_addr_rea_reg_1063 = INPUT_IMAGE_RDATA.read();
        ap_reg_pp0_iter10_INPUT_IMAGE_addr_reg_1049 = ap_reg_pp0_iter9_INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter10_exitcond_flatten_reg_978 = ap_reg_pp0_iter9_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter10_tmp_t_reg_1055 = ap_reg_pp0_iter9_tmp_t_reg_1055.read();
        ap_reg_pp0_iter11_INPUT_IMAGE_addr_reg_1049 = ap_reg_pp0_iter10_INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter11_exitcond_flatten_reg_978 = ap_reg_pp0_iter10_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter11_tmp_t_reg_1055 = ap_reg_pp0_iter10_tmp_t_reg_1055.read();
        ap_reg_pp0_iter12_INPUT_IMAGE_addr_reg_1049 = ap_reg_pp0_iter11_INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter12_exitcond_flatten_reg_978 = ap_reg_pp0_iter11_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter12_tmp_t_reg_1055 = ap_reg_pp0_iter11_tmp_t_reg_1055.read();
        ap_reg_pp0_iter13_INPUT_IMAGE_addr_reg_1049 = ap_reg_pp0_iter12_INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter13_exitcond_flatten_reg_978 = ap_reg_pp0_iter12_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter13_tmp_t_reg_1055 = ap_reg_pp0_iter12_tmp_t_reg_1055.read();
        ap_reg_pp0_iter14_INPUT_IMAGE_addr_reg_1049 = ap_reg_pp0_iter13_INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter14_tmp_t_reg_1055 = ap_reg_pp0_iter13_tmp_t_reg_1055.read();
        ap_reg_pp0_iter15_tmp_t_reg_1055 = ap_reg_pp0_iter14_tmp_t_reg_1055.read();
        ap_reg_pp0_iter16_tmp_t_reg_1055 = ap_reg_pp0_iter15_tmp_t_reg_1055.read();
        ap_reg_pp0_iter17_tmp_t_reg_1055 = ap_reg_pp0_iter16_tmp_t_reg_1055.read();
        ap_reg_pp0_iter18_tmp_t_reg_1055 = ap_reg_pp0_iter17_tmp_t_reg_1055.read();
        ap_reg_pp0_iter19_tmp_t_reg_1055 = ap_reg_pp0_iter18_tmp_t_reg_1055.read();
        ap_reg_pp0_iter20_tmp_t_reg_1055 = ap_reg_pp0_iter19_tmp_t_reg_1055.read();
        ap_reg_pp0_iter21_tmp_t_reg_1055 = ap_reg_pp0_iter20_tmp_t_reg_1055.read();
        ap_reg_pp0_iter22_tmp_t_reg_1055 = ap_reg_pp0_iter21_tmp_t_reg_1055.read();
        ap_reg_pp0_iter2_exitcond_flatten_reg_978 = ap_reg_pp0_iter1_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter2_exitcond_reg_987 = ap_reg_pp0_iter1_exitcond_reg_987.read();
        ap_reg_pp0_iter2_tmp_9_reg_1017 = tmp_9_reg_1017.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_978 = ap_reg_pp0_iter2_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter3_exitcond_reg_987 = ap_reg_pp0_iter2_exitcond_reg_987.read();
        ap_reg_pp0_iter3_tmp_9_reg_1017 = ap_reg_pp0_iter2_tmp_9_reg_1017.read();
        ap_reg_pp0_iter4_exitcond_flatten_reg_978 = ap_reg_pp0_iter3_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter4_exitcond_reg_987 = ap_reg_pp0_iter3_exitcond_reg_987.read();
        ap_reg_pp0_iter4_tmp_9_reg_1017 = ap_reg_pp0_iter3_tmp_9_reg_1017.read();
        ap_reg_pp0_iter5_exitcond_flatten_reg_978 = ap_reg_pp0_iter4_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter5_exitcond_reg_987 = ap_reg_pp0_iter4_exitcond_reg_987.read();
        ap_reg_pp0_iter6_exitcond_flatten_reg_978 = ap_reg_pp0_iter5_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter6_exitcond_reg_987 = ap_reg_pp0_iter5_exitcond_reg_987.read();
        ap_reg_pp0_iter7_exitcond_flatten_reg_978 = ap_reg_pp0_iter6_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter8_INPUT_IMAGE_addr_reg_1049 = INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter8_exitcond_flatten_reg_978 = ap_reg_pp0_iter7_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter8_tmp_t_reg_1055 = tmp_t_reg_1055.read();
        ap_reg_pp0_iter9_INPUT_IMAGE_addr_reg_1049 = ap_reg_pp0_iter8_INPUT_IMAGE_addr_reg_1049.read();
        ap_reg_pp0_iter9_exitcond_flatten_reg_978 = ap_reg_pp0_iter8_exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter9_tmp_t_reg_1055 = ap_reg_pp0_iter8_tmp_t_reg_1055.read();
        tmp_6_reg_1083 = grp_fu_794_p2.read();
        tmp_t_reg_1055 = grp_fu_922_p2.read().range(24, 21);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter6_exitcond_flatten_reg_978.read()))) {
        INPUT_IMAGE_addr_reg_1049 =  (sc_lv<32>) (imageptr2_sum_cast_fu_844_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_978 = exitcond_flatten_reg_978.read();
        ap_reg_pp0_iter1_exitcond_reg_987 = exitcond_reg_987.read();
        exitcond_flatten_reg_978 = exitcond_flatten_fu_668_p2.read();
        tmp_reg_973 = tmp_fu_629_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_exitcond2_reg_1096 = exitcond2_reg_1096.read();
        exitcond2_reg_1096 = exitcond2_fu_905_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_668_p2.read()))) {
        exitcond_reg_987 = exitcond_fu_680_p2.read();
        indvar_mid2_reg_992 = indvar_mid2_fu_686_p3.read();
        tmp_8_cast_cast_mid2_1_reg_1002 = tmp_8_cast_cast_mid2_1_fu_743_p3.read();
        tmp_mid1_reg_997 = tmp_mid1_fu_704_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_982 = indvar_flatten_next_fu_674_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter5_exitcond_reg_987.read()))) {
        offset_reg_1038 = offset_fu_809_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(exitcond2_reg_1096.read(), ap_const_lv1_0))) {
        rst_load_reg_1110 = rst_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter13_exitcond_flatten_reg_978.read()))) {
        tmp_16_reg_1059 = tmp_16_fu_863_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter4_exitcond_flatten_reg_978.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter4_exitcond_reg_987.read()))) {
        tmp_1_mid1_reg_1028 = grp_fu_775_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter4_exitcond_reg_987.read()))) {
        tmp_1_reg_1023 = grp_fu_771_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter5_exitcond_flatten_reg_978.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter5_exitcond_reg_987.read()))) {
        tmp_2_mid1_reg_1043 = tmp_2_mid1_fu_815_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_978.read()))) {
        tmp_9_reg_1017 = tmp_9_fu_785_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_reg_945 = specs_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        y_reg_934 = specs_q0.read();
    }
}

void color_hist::thread_FEATURE_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(grp_calc_hist_fu_580_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_FEATURE_AWREADY.read()))) {
        FEATURE_AWVALID = ap_const_logic_1;
    } else {
        FEATURE_AWVALID = ap_const_logic_0;
    }
}

void color_hist::thread_FEATURE_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(FEATURE_BVALID.read(), ap_const_logic_1))) {
        FEATURE_BREADY = ap_const_logic_1;
    } else {
        FEATURE_BREADY = ap_const_logic_0;
    }
}

void color_hist::thread_FEATURE_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp1_iter1_exitcond2_reg_1096.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_FEATURE_WREADY.read()))) {
        FEATURE_WVALID = ap_const_logic_1;
    } else {
        FEATURE_WVALID = ap_const_logic_0;
    }
}

void color_hist::thread_FEATURE_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        FEATURE_blk_n_AW = m_axi_FEATURE_AWREADY.read();
    } else {
        FEATURE_blk_n_AW = ap_const_logic_1;
    }
}

void color_hist::thread_FEATURE_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        FEATURE_blk_n_B = m_axi_FEATURE_BVALID.read();
    } else {
        FEATURE_blk_n_B = ap_const_logic_1;
    }
}

void color_hist::thread_FEATURE_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp1_iter1_exitcond2_reg_1096.read(), ap_const_lv1_0))) {
        FEATURE_blk_n_W = m_axi_FEATURE_WREADY.read();
    } else {
        FEATURE_blk_n_W = ap_const_logic_1;
    }
}

void color_hist::thread_INPUT_IMAGE_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(tmp_16_reg_1059.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_IMAGE_ARREADY.read()))) {
        INPUT_IMAGE_ARVALID = ap_const_logic_1;
    } else {
        INPUT_IMAGE_ARVALID = ap_const_logic_0;
    }
}

void color_hist::thread_INPUT_IMAGE_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        INPUT_IMAGE_RREADY = ap_const_logic_1;
    } else {
        INPUT_IMAGE_RREADY = ap_const_logic_0;
    }
}

void color_hist::thread_INPUT_IMAGE_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_16_reg_1059.read(), ap_const_lv1_1))) {
        INPUT_IMAGE_blk_n_AR = m_axi_INPUT_IMAGE_ARREADY.read();
    } else {
        INPUT_IMAGE_blk_n_AR = ap_const_logic_1;
    }
}

void color_hist::thread_INPUT_IMAGE_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter22.read()))) {
        INPUT_IMAGE_blk_n_R = m_axi_INPUT_IMAGE_RVALID.read();
    } else {
        INPUT_IMAGE_blk_n_R = ap_const_logic_1;
    }
}

void color_hist::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void color_hist::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[9];
}

void color_hist::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void color_hist::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void color_hist::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[5];
}

void color_hist::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void color_hist::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[6];
}

void color_hist::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[7];
}

void color_hist::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[8];
}

void color_hist::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void color_hist::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[14];
}

void color_hist::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter22.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_IMAGE_RVALID.read()));
}

void color_hist::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state20_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter22.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_IMAGE_RVALID.read())));
}

void color_hist::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state20_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter22.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, INPUT_IMAGE_RVALID.read())));
}

void color_hist::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read()));
}

void color_hist::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read()));
}

void color_hist::thread_ap_block_state10_pp0_stage0_iter5() {
    ap_block_state10_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state11_pp0_stage0_iter6() {
    ap_block_state11_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state12_pp0_stage0_iter7() {
    ap_block_state12_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state13_pp0_stage0_iter8() {
    ap_block_state13_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state14_pp0_stage0_iter9() {
    ap_block_state14_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state15_pp0_stage0_iter10() {
    ap_block_state15_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state16_pp0_stage0_iter11() {
    ap_block_state16_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state17_pp0_stage0_iter12() {
    ap_block_state17_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state18_pp0_stage0_iter13() {
    ap_block_state18_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state19_pp0_stage0_iter14() {
    ap_block_state19_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state20_io() {
    ap_block_state20_io = (esl_seteq<1,1,1>(tmp_16_reg_1059.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_INPUT_IMAGE_ARREADY.read()));
}

void color_hist::thread_ap_block_state20_pp0_stage0_iter15() {
    ap_block_state20_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state21_pp0_stage0_iter16() {
    ap_block_state21_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state22_pp0_stage0_iter17() {
    ap_block_state22_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state23_pp0_stage0_iter18() {
    ap_block_state23_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state24_pp0_stage0_iter19() {
    ap_block_state24_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state25_pp0_stage0_iter20() {
    ap_block_state25_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state26_pp0_stage0_iter21() {
    ap_block_state26_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state27_pp0_stage0_iter22() {
    ap_block_state27_pp0_stage0_iter22 = esl_seteq<1,1,1>(ap_const_logic_0, INPUT_IMAGE_RVALID.read());
}

void color_hist::thread_ap_block_state28_pp0_stage0_iter23() {
    ap_block_state28_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state33_pp1_stage0_iter0() {
    ap_block_state33_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state34_pp1_stage0_iter1() {
    ap_block_state34_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state35_io() {
    ap_block_state35_io = (esl_seteq<1,1,1>(ap_reg_pp1_iter1_exitcond2_reg_1096.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_FEATURE_WREADY.read()));
}

void color_hist::thread_ap_block_state35_pp1_stage0_iter2() {
    ap_block_state35_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state7_pp0_stage0_iter2() {
    ap_block_state7_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state8_pp0_stage0_iter3() {
    ap_block_state8_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_block_state9_pp0_stage0_iter4() {
    ap_block_state9_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_hist::thread_ap_condition_pp0_exit_iter6_state11() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter6.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0))) {
        ap_condition_pp0_exit_iter6_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter6_state11 = ap_const_logic_0;
    }
}

void color_hist::thread_ap_condition_pp1_exit_iter0_state33() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_905_p2.read())) {
        ap_condition_pp1_exit_iter0_state33 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state33 = ap_const_logic_0;
    }
}

void color_hist::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(FEATURE_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void color_hist::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void color_hist::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void color_hist::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void color_hist::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void color_hist::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void color_hist::thread_ap_phi_mux_indvar_flatten_phi_fu_528_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_978.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_indvar_flatten_phi_fu_528_p4 = indvar_flatten_next_reg_982.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_528_p4 = indvar_flatten_reg_524.read();
    }
}

void color_hist::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(FEATURE_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void color_hist::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void color_hist::thread_ap_sig_ioackin_FEATURE_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_FEATURE_AWREADY.read())) {
        ap_sig_ioackin_FEATURE_AWREADY = FEATURE_AWREADY.read();
    } else {
        ap_sig_ioackin_FEATURE_AWREADY = ap_const_logic_1;
    }
}

void color_hist::thread_ap_sig_ioackin_FEATURE_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_FEATURE_WREADY.read())) {
        ap_sig_ioackin_FEATURE_WREADY = FEATURE_WREADY.read();
    } else {
        ap_sig_ioackin_FEATURE_WREADY = ap_const_logic_1;
    }
}

void color_hist::thread_ap_sig_ioackin_INPUT_IMAGE_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_IMAGE_ARREADY.read())) {
        ap_sig_ioackin_INPUT_IMAGE_ARREADY = INPUT_IMAGE_ARREADY.read();
    } else {
        ap_sig_ioackin_INPUT_IMAGE_ARREADY = ap_const_logic_1;
    }
}

void color_hist::thread_exitcond2_fu_905_p2() {
    exitcond2_fu_905_p2 = (!indvar8_reg_569.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(indvar8_reg_569.read() == ap_const_lv6_24);
}

void color_hist::thread_exitcond_flatten_fu_668_p2() {
    exitcond_flatten_fu_668_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_528_p4.read().is_01() || !ap_const_lv11_600.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_528_p4.read() == ap_const_lv11_600);
}

void color_hist::thread_exitcond_fu_680_p2() {
    exitcond_fu_680_p2 = (!indvar_reg_547.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(indvar_reg_547.read() == ap_const_lv7_60);
}

void color_hist::thread_feature3_fu_601_p4() {
    feature3_fu_601_p4 = feature_r.read().range(31, 1);
}

void color_hist::thread_grp_calc_hist_fu_580_ap_start() {
    grp_calc_hist_fu_580_ap_start = ap_reg_grp_calc_hist_fu_580_ap_start.read();
}

void color_hist::thread_grp_fu_765_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_765_ce = ap_const_logic_1;
    } else {
        grp_fu_765_ce = ap_const_logic_0;
    }
}

void color_hist::thread_grp_fu_765_p1() {
    grp_fu_765_p1 =  (sc_lv<8>) (ap_const_lv11_60);
}

void color_hist::thread_grp_fu_771_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_771_ce = ap_const_logic_1;
    } else {
        grp_fu_771_ce = ap_const_logic_0;
    }
}

void color_hist::thread_grp_fu_775_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_775_ce = ap_const_logic_1;
    } else {
        grp_fu_775_ce = ap_const_logic_0;
    }
}

void color_hist::thread_grp_fu_794_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_794_ce = ap_const_logic_1;
    } else {
        grp_fu_794_ce = ap_const_logic_0;
    }
}

void color_hist::thread_grp_fu_794_p1() {
    grp_fu_794_p1 =  (sc_lv<8>) (ap_const_lv14_60);
}

void color_hist::thread_grp_fu_922_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_922_ce = ap_const_logic_1;
    } else {
        grp_fu_922_ce = ap_const_logic_0;
    }
}

void color_hist::thread_grp_fu_922_p0() {
    grp_fu_922_p0 =  (sc_lv<14>) (grp_fu_922_p00.read());
}

void color_hist::thread_grp_fu_922_p00() {
    grp_fu_922_p00 = esl_zext<30,14>(ap_reg_pp0_iter4_tmp_9_reg_1017.read());
}

void color_hist::thread_grp_fu_922_p1() {
    grp_fu_922_p1 =  (sc_lv<16>) (ap_const_lv30_5556);
}

void color_hist::thread_i_cast7_fu_625_p1() {
    i_cast7_fu_625_p1 = esl_zext<32,5>(i_reg_536.read());
}

void color_hist::thread_i_cast7_mid1_fu_700_p1() {
    i_cast7_mid1_fu_700_p1 = esl_zext<32,5>(i_s_fu_694_p2.read());
}

void color_hist::thread_i_mid2_fu_751_p3() {
    i_mid2_fu_751_p3 = (!exitcond_fu_680_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_680_p2.read()[0].to_bool())? i_s_fu_694_p2.read(): i_reg_536.read());
}

void color_hist::thread_i_s_fu_694_p2() {
    i_s_fu_694_p2 = (!ap_const_lv5_1.is_01() || !i_reg_536.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(i_reg_536.read()));
}

void color_hist::thread_image_buffer_0_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_0_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_0_address0 = grp_calc_hist_fu_580_image_buffer_0_address0.read();
    } else {
        image_buffer_0_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_0_ce0 = grp_calc_hist_fu_580_image_buffer_0_ce0.read();
    } else {
        image_buffer_0_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_0_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_0))) {
        image_buffer_0_we0 = ap_const_logic_1;
    } else {
        image_buffer_0_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_10_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_10_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_10_address0 = grp_calc_hist_fu_580_image_buffer_10_address0.read();
    } else {
        image_buffer_10_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_10_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_10_ce0 = grp_calc_hist_fu_580_image_buffer_10_ce0.read();
    } else {
        image_buffer_10_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_10_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_A))) {
        image_buffer_10_we0 = ap_const_logic_1;
    } else {
        image_buffer_10_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_11_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_11_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_11_address0 = grp_calc_hist_fu_580_image_buffer_11_address0.read();
    } else {
        image_buffer_11_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_11_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_11_ce0 = grp_calc_hist_fu_580_image_buffer_11_ce0.read();
    } else {
        image_buffer_11_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_11_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_B))) {
        image_buffer_11_we0 = ap_const_logic_1;
    } else {
        image_buffer_11_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_12_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_12_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_12_address0 = grp_calc_hist_fu_580_image_buffer_12_address0.read();
    } else {
        image_buffer_12_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_12_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_12_ce0 = grp_calc_hist_fu_580_image_buffer_12_ce0.read();
    } else {
        image_buffer_12_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_12_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_C))) {
        image_buffer_12_we0 = ap_const_logic_1;
    } else {
        image_buffer_12_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_13_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_13_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_13_address0 = grp_calc_hist_fu_580_image_buffer_13_address0.read();
    } else {
        image_buffer_13_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_13_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_13_ce0 = grp_calc_hist_fu_580_image_buffer_13_ce0.read();
    } else {
        image_buffer_13_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_13_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_D))) {
        image_buffer_13_we0 = ap_const_logic_1;
    } else {
        image_buffer_13_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_14_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_14_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_14_address0 = grp_calc_hist_fu_580_image_buffer_14_address0.read();
    } else {
        image_buffer_14_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_14_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_14_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_14_ce0 = grp_calc_hist_fu_580_image_buffer_14_ce0.read();
    } else {
        image_buffer_14_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_14_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_E))) {
        image_buffer_14_we0 = ap_const_logic_1;
    } else {
        image_buffer_14_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_15_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_15_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_15_address0 = grp_calc_hist_fu_580_image_buffer_15_address0.read();
    } else {
        image_buffer_15_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_15_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_15_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_15_ce0 = grp_calc_hist_fu_580_image_buffer_15_ce0.read();
    } else {
        image_buffer_15_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_15_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_F))) {
        image_buffer_15_we0 = ap_const_logic_1;
    } else {
        image_buffer_15_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_1_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_1_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_1_address0 = grp_calc_hist_fu_580_image_buffer_1_address0.read();
    } else {
        image_buffer_1_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_1_ce0 = grp_calc_hist_fu_580_image_buffer_1_ce0.read();
    } else {
        image_buffer_1_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_1_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_1))) {
        image_buffer_1_we0 = ap_const_logic_1;
    } else {
        image_buffer_1_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_2_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_2_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_2_address0 = grp_calc_hist_fu_580_image_buffer_2_address0.read();
    } else {
        image_buffer_2_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_2_ce0 = grp_calc_hist_fu_580_image_buffer_2_ce0.read();
    } else {
        image_buffer_2_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_2_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_2))) {
        image_buffer_2_we0 = ap_const_logic_1;
    } else {
        image_buffer_2_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_3_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_3_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_3_address0 = grp_calc_hist_fu_580_image_buffer_3_address0.read();
    } else {
        image_buffer_3_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_3_ce0 = grp_calc_hist_fu_580_image_buffer_3_ce0.read();
    } else {
        image_buffer_3_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_3_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_3))) {
        image_buffer_3_we0 = ap_const_logic_1;
    } else {
        image_buffer_3_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_4_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_4_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_4_address0 = grp_calc_hist_fu_580_image_buffer_4_address0.read();
    } else {
        image_buffer_4_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_4_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_4_ce0 = grp_calc_hist_fu_580_image_buffer_4_ce0.read();
    } else {
        image_buffer_4_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_4_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_4))) {
        image_buffer_4_we0 = ap_const_logic_1;
    } else {
        image_buffer_4_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_5_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_5_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_5_address0 = grp_calc_hist_fu_580_image_buffer_5_address0.read();
    } else {
        image_buffer_5_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_5_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_5_ce0 = grp_calc_hist_fu_580_image_buffer_5_ce0.read();
    } else {
        image_buffer_5_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_5_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_5))) {
        image_buffer_5_we0 = ap_const_logic_1;
    } else {
        image_buffer_5_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_6_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_6_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_6_address0 = grp_calc_hist_fu_580_image_buffer_6_address0.read();
    } else {
        image_buffer_6_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_6_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_6_ce0 = grp_calc_hist_fu_580_image_buffer_6_ce0.read();
    } else {
        image_buffer_6_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_6_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_6))) {
        image_buffer_6_we0 = ap_const_logic_1;
    } else {
        image_buffer_6_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_7_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_7_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_7_address0 = grp_calc_hist_fu_580_image_buffer_7_address0.read();
    } else {
        image_buffer_7_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_7_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_7_ce0 = grp_calc_hist_fu_580_image_buffer_7_ce0.read();
    } else {
        image_buffer_7_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_7_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_7))) {
        image_buffer_7_we0 = ap_const_logic_1;
    } else {
        image_buffer_7_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_8_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_8_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_8_address0 = grp_calc_hist_fu_580_image_buffer_8_address0.read();
    } else {
        image_buffer_8_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_8_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_8_ce0 = grp_calc_hist_fu_580_image_buffer_8_ce0.read();
    } else {
        image_buffer_8_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_8_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_8))) {
        image_buffer_8_we0 = ap_const_logic_1;
    } else {
        image_buffer_8_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_9_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_9_address0 =  (sc_lv<7>) (tmp_s_fu_869_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_9_address0 = grp_calc_hist_fu_580_image_buffer_9_address0.read();
    } else {
        image_buffer_9_address0 = "XXXXXXX";
    }
}

void color_hist::thread_image_buffer_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()))) {
        image_buffer_9_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        image_buffer_9_ce0 = grp_calc_hist_fu_580_image_buffer_9_ce0.read();
    } else {
        image_buffer_9_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_image_buffer_9_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,4,4>(ap_reg_pp0_iter22_tmp_t_reg_1055.read(), ap_const_lv4_9))) {
        image_buffer_9_we0 = ap_const_logic_1;
    } else {
        image_buffer_9_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_imageptr2_sum_cast_fu_844_p1() {
    imageptr2_sum_cast_fu_844_p1 = esl_sext<64,33>(imageptr2_sum_fu_839_p2.read());
}

void color_hist::thread_imageptr2_sum_fu_839_p2() {
    imageptr2_sum_fu_839_p2 = (!tmp_10_cast_reg_962.read().is_01() || !tmp_3_mid2_cast_fu_835_p1.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_10_cast_reg_962.read()) + sc_bigint<33>(tmp_3_mid2_cast_fu_835_p1.read()));
}

void color_hist::thread_indvar_cast4_cast_fu_782_p1() {
    indvar_cast4_cast_fu_782_p1 = esl_zext<14,7>(indvar_mid2_reg_992.read());
}

void color_hist::thread_indvar_flatten_next_fu_674_p2() {
    indvar_flatten_next_fu_674_p2 = (!ap_const_lv11_1.is_01() || !ap_phi_mux_indvar_flatten_phi_fu_528_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(ap_phi_mux_indvar_flatten_phi_fu_528_p4.read()));
}

void color_hist::thread_indvar_mid2_fu_686_p3() {
    indvar_mid2_fu_686_p3 = (!exitcond_fu_680_p2.read()[0].is_01())? sc_lv<7>(): ((exitcond_fu_680_p2.read()[0].to_bool())? ap_const_lv7_0: indvar_reg_547.read());
}

void color_hist::thread_indvar_next9_fu_911_p2() {
    indvar_next9_fu_911_p2 = (!indvar8_reg_569.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(indvar8_reg_569.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void color_hist::thread_indvar_next_fu_759_p2() {
    indvar_next_fu_759_p2 = (!ap_const_lv7_1.is_01() || !indvar_mid2_fu_686_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(indvar_mid2_fu_686_p3.read()));
}

void color_hist::thread_indvarinc_fu_888_p2() {
    indvarinc_fu_888_p2 = (!invdar_reg_558.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(invdar_reg_558.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void color_hist::thread_offset_fu_809_p2() {
    offset_fu_809_p2 = (!tmp_7_fu_803_p2.read().is_01() || !tmp_2_fu_799_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_fu_803_p2.read()) - sc_biguint<32>(tmp_2_fu_799_p2.read()));
}

void color_hist::thread_offset_mid1_fu_824_p2() {
    offset_mid1_fu_824_p2 = (!tmp_12_fu_819_p2.read().is_01() || !tmp_2_mid1_reg_1043.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_12_fu_819_p2.read()) - sc_biguint<32>(tmp_2_mid1_reg_1043.read()));
}

void color_hist::thread_p_shl3_cast_fu_646_p1() {
    p_shl3_cast_fu_646_p1 = esl_zext<12,11>(p_shl3_fu_638_p3.read());
}

void color_hist::thread_p_shl3_cast_mid1_fu_721_p1() {
    p_shl3_cast_mid1_fu_721_p1 = esl_zext<12,11>(p_shl3_mid1_fu_713_p3.read());
}

void color_hist::thread_p_shl3_fu_638_p3() {
    p_shl3_fu_638_p3 = esl_concat<4,7>(tmp_10_fu_634_p1.read(), ap_const_lv7_0);
}

void color_hist::thread_p_shl3_mid1_fu_713_p3() {
    p_shl3_mid1_fu_713_p3 = esl_concat<4,7>(tmp_14_fu_709_p1.read(), ap_const_lv7_0);
}

void color_hist::thread_p_shl4_cast_fu_658_p1() {
    p_shl4_cast_fu_658_p1 = esl_zext<12,9>(p_shl4_fu_650_p3.read());
}

void color_hist::thread_p_shl4_cast_mid1_fu_733_p1() {
    p_shl4_cast_mid1_fu_733_p1 = esl_zext<12,9>(p_shl4_mid1_fu_725_p3.read());
}

void color_hist::thread_p_shl4_fu_650_p3() {
    p_shl4_fu_650_p3 = esl_concat<4,5>(tmp_10_fu_634_p1.read(), ap_const_lv5_0);
}

void color_hist::thread_p_shl4_mid1_fu_725_p3() {
    p_shl4_mid1_fu_725_p3 = esl_concat<4,5>(tmp_14_fu_709_p1.read(), ap_const_lv5_0);
}

void color_hist::thread_rst_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        rst_address0 =  (sc_lv<6>) (tmp_11_fu_917_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        rst_address0 =  (sc_lv<6>) (tmp_4_fu_894_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        rst_address0 = grp_calc_hist_fu_580_rst_address0.read();
    } else {
        rst_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void color_hist::thread_rst_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        rst_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        rst_ce0 = grp_calc_hist_fu_580_rst_ce0.read();
    } else {
        rst_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_rst_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        rst_ce1 = grp_calc_hist_fu_580_rst_ce1.read();
    } else {
        rst_ce1 = ap_const_logic_0;
    }
}

void color_hist::thread_rst_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        rst_we0 = ap_const_logic_1;
    } else {
        rst_we0 = ap_const_logic_0;
    }
}

void color_hist::thread_rst_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        rst_we1 = grp_calc_hist_fu_580_rst_we1.read();
    } else {
        rst_we1 = ap_const_logic_0;
    }
}

void color_hist::thread_specs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        specs_address0 =  (sc_lv<2>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        specs_address0 =  (sc_lv<2>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        specs_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else {
        specs_address0 =  (sc_lv<2>) ("XX");
    }
}

void color_hist::thread_specs_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        specs_ce0 = ap_const_logic_1;
    } else {
        specs_ce0 = ap_const_logic_0;
    }
}

void color_hist::thread_tmp_10_cast_fu_621_p1() {
    tmp_10_cast_fu_621_p1 = esl_sext<33,32>(imageptr.read());
}

void color_hist::thread_tmp_10_fu_634_p1() {
    tmp_10_fu_634_p1 = i_reg_536.read().range(4-1, 0);
}

void color_hist::thread_tmp_11_fu_917_p1() {
    tmp_11_fu_917_p1 = esl_zext<64,6>(indvar8_reg_569.read());
}

void color_hist::thread_tmp_12_fu_819_p2() {
    tmp_12_fu_819_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_2_mid1_reg_1043.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void color_hist::thread_tmp_13_fu_829_p3() {
    tmp_13_fu_829_p3 = (!ap_reg_pp0_iter6_exitcond_reg_987.read()[0].is_01())? sc_lv<32>(): ((ap_reg_pp0_iter6_exitcond_reg_987.read()[0].to_bool())? offset_mid1_fu_824_p2.read(): offset_reg_1038.read());
}

void color_hist::thread_tmp_14_fu_709_p1() {
    tmp_14_fu_709_p1 = i_s_fu_694_p2.read().range(4-1, 0);
}

void color_hist::thread_tmp_16_fu_863_p2() {
    tmp_16_fu_863_p2 = (!grp_fu_765_p2.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_765_p2.read() == ap_const_lv11_0);
}

void color_hist::thread_tmp_2_fu_799_p2() {
    tmp_2_fu_799_p2 = (!tmp_1_reg_1023.read().is_01() || !x_reg_945.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_reg_1023.read()) + sc_biguint<32>(x_reg_945.read()));
}

void color_hist::thread_tmp_2_mid1_fu_815_p2() {
    tmp_2_mid1_fu_815_p2 = (!tmp_1_mid1_reg_1028.read().is_01() || !x_reg_945.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_mid1_reg_1028.read()) + sc_biguint<32>(x_reg_945.read()));
}

void color_hist::thread_tmp_3_fu_611_p1() {
    tmp_3_fu_611_p1 = esl_zext<64,31>(feature3_fu_601_p4.read());
}

void color_hist::thread_tmp_3_mid2_cast_fu_835_p1() {
    tmp_3_mid2_cast_fu_835_p1 = esl_sext<33,32>(tmp_13_fu_829_p3.read());
}

void color_hist::thread_tmp_4_fu_894_p1() {
    tmp_4_fu_894_p1 = esl_zext<64,6>(invdar_reg_558.read());
}

void color_hist::thread_tmp_5_fu_899_p2() {
    tmp_5_fu_899_p2 = (!invdar_reg_558.read().is_01() || !ap_const_lv6_23.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_558.read() == ap_const_lv6_23);
}

void color_hist::thread_tmp_7_fu_803_p2() {
    tmp_7_fu_803_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_2_fu_799_p2.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void color_hist::thread_tmp_8_cast_cast_mid2_1_fu_743_p3() {
    tmp_8_cast_cast_mid2_1_fu_743_p3 = (!exitcond_fu_680_p2.read()[0].is_01())? sc_lv<12>(): ((exitcond_fu_680_p2.read()[0].to_bool())? tmp_8_mid1_fu_737_p2.read(): tmp_8_fu_662_p2.read());
}

void color_hist::thread_tmp_8_cast_cast_mid2_fu_779_p1() {
    tmp_8_cast_cast_mid2_fu_779_p1 = esl_sext<14,12>(tmp_8_cast_cast_mid2_1_reg_1002.read());
}

void color_hist::thread_tmp_8_fu_662_p2() {
    tmp_8_fu_662_p2 = (!p_shl3_cast_fu_646_p1.read().is_01() || !p_shl4_cast_fu_658_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_shl3_cast_fu_646_p1.read()) - sc_biguint<12>(p_shl4_cast_fu_658_p1.read()));
}

void color_hist::thread_tmp_8_mid1_fu_737_p2() {
    tmp_8_mid1_fu_737_p2 = (!p_shl3_cast_mid1_fu_721_p1.read().is_01() || !p_shl4_cast_mid1_fu_733_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_shl3_cast_mid1_fu_721_p1.read()) - sc_biguint<12>(p_shl4_cast_mid1_fu_733_p1.read()));
}

void color_hist::thread_tmp_9_fu_785_p2() {
    tmp_9_fu_785_p2 = (!tmp_8_cast_cast_mid2_fu_779_p1.read().is_01() || !indvar_cast4_cast_fu_782_p1.read().is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_8_cast_cast_mid2_fu_779_p1.read()) + sc_biguint<14>(indvar_cast4_cast_fu_782_p1.read()));
}

void color_hist::thread_tmp_fu_629_p2() {
    tmp_fu_629_p2 = (!i_cast7_fu_625_p1.read().is_01() || !y_reg_934.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_cast7_fu_625_p1.read()) + sc_biguint<32>(y_reg_934.read()));
}

void color_hist::thread_tmp_mid1_fu_704_p2() {
    tmp_mid1_fu_704_p2 = (!i_cast7_mid1_fu_700_p1.read().is_01() || !y_reg_934.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_cast7_mid1_fu_700_p1.read()) + sc_biguint<32>(y_reg_934.read()));
}

void color_hist::thread_tmp_s_fu_869_p1() {
    tmp_s_fu_869_p1 = esl_zext<64,14>(tmp_6_reg_1083.read());
}

void color_hist::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter22.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter23.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter22.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_899_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_FEATURE_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_calc_hist_fu_580_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 512 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_905_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_905_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(FEATURE_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

void color_hist::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_INPUT_IMAGE_AWVALID\" :  \"" << m_axi_INPUT_IMAGE_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWREADY\" :  \"" << m_axi_INPUT_IMAGE_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWADDR\" :  \"" << m_axi_INPUT_IMAGE_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWID\" :  \"" << m_axi_INPUT_IMAGE_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWLEN\" :  \"" << m_axi_INPUT_IMAGE_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWSIZE\" :  \"" << m_axi_INPUT_IMAGE_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWBURST\" :  \"" << m_axi_INPUT_IMAGE_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWLOCK\" :  \"" << m_axi_INPUT_IMAGE_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWCACHE\" :  \"" << m_axi_INPUT_IMAGE_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWPROT\" :  \"" << m_axi_INPUT_IMAGE_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWQOS\" :  \"" << m_axi_INPUT_IMAGE_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWREGION\" :  \"" << m_axi_INPUT_IMAGE_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_AWUSER\" :  \"" << m_axi_INPUT_IMAGE_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WVALID\" :  \"" << m_axi_INPUT_IMAGE_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WREADY\" :  \"" << m_axi_INPUT_IMAGE_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WDATA\" :  \"" << m_axi_INPUT_IMAGE_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WSTRB\" :  \"" << m_axi_INPUT_IMAGE_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WLAST\" :  \"" << m_axi_INPUT_IMAGE_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WID\" :  \"" << m_axi_INPUT_IMAGE_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_WUSER\" :  \"" << m_axi_INPUT_IMAGE_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARVALID\" :  \"" << m_axi_INPUT_IMAGE_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARREADY\" :  \"" << m_axi_INPUT_IMAGE_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARADDR\" :  \"" << m_axi_INPUT_IMAGE_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARID\" :  \"" << m_axi_INPUT_IMAGE_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARLEN\" :  \"" << m_axi_INPUT_IMAGE_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARSIZE\" :  \"" << m_axi_INPUT_IMAGE_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARBURST\" :  \"" << m_axi_INPUT_IMAGE_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARLOCK\" :  \"" << m_axi_INPUT_IMAGE_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARCACHE\" :  \"" << m_axi_INPUT_IMAGE_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARPROT\" :  \"" << m_axi_INPUT_IMAGE_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARQOS\" :  \"" << m_axi_INPUT_IMAGE_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARREGION\" :  \"" << m_axi_INPUT_IMAGE_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_ARUSER\" :  \"" << m_axi_INPUT_IMAGE_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RVALID\" :  \"" << m_axi_INPUT_IMAGE_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RREADY\" :  \"" << m_axi_INPUT_IMAGE_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RDATA\" :  \"" << m_axi_INPUT_IMAGE_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RLAST\" :  \"" << m_axi_INPUT_IMAGE_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RID\" :  \"" << m_axi_INPUT_IMAGE_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RUSER\" :  \"" << m_axi_INPUT_IMAGE_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_RRESP\" :  \"" << m_axi_INPUT_IMAGE_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_BVALID\" :  \"" << m_axi_INPUT_IMAGE_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_IMAGE_BREADY\" :  \"" << m_axi_INPUT_IMAGE_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_BRESP\" :  \"" << m_axi_INPUT_IMAGE_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_BID\" :  \"" << m_axi_INPUT_IMAGE_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_IMAGE_BUSER\" :  \"" << m_axi_INPUT_IMAGE_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWVALID\" :  \"" << m_axi_FEATURE_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_AWREADY\" :  \"" << m_axi_FEATURE_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWADDR\" :  \"" << m_axi_FEATURE_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWID\" :  \"" << m_axi_FEATURE_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWLEN\" :  \"" << m_axi_FEATURE_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWSIZE\" :  \"" << m_axi_FEATURE_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWBURST\" :  \"" << m_axi_FEATURE_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWLOCK\" :  \"" << m_axi_FEATURE_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWCACHE\" :  \"" << m_axi_FEATURE_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWPROT\" :  \"" << m_axi_FEATURE_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWQOS\" :  \"" << m_axi_FEATURE_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWREGION\" :  \"" << m_axi_FEATURE_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_AWUSER\" :  \"" << m_axi_FEATURE_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_WVALID\" :  \"" << m_axi_FEATURE_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_WREADY\" :  \"" << m_axi_FEATURE_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_WDATA\" :  \"" << m_axi_FEATURE_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_WSTRB\" :  \"" << m_axi_FEATURE_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_WLAST\" :  \"" << m_axi_FEATURE_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_WID\" :  \"" << m_axi_FEATURE_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_WUSER\" :  \"" << m_axi_FEATURE_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARVALID\" :  \"" << m_axi_FEATURE_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_ARREADY\" :  \"" << m_axi_FEATURE_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARADDR\" :  \"" << m_axi_FEATURE_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARID\" :  \"" << m_axi_FEATURE_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARLEN\" :  \"" << m_axi_FEATURE_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARSIZE\" :  \"" << m_axi_FEATURE_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARBURST\" :  \"" << m_axi_FEATURE_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARLOCK\" :  \"" << m_axi_FEATURE_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARCACHE\" :  \"" << m_axi_FEATURE_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARPROT\" :  \"" << m_axi_FEATURE_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARQOS\" :  \"" << m_axi_FEATURE_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARREGION\" :  \"" << m_axi_FEATURE_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_ARUSER\" :  \"" << m_axi_FEATURE_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_RVALID\" :  \"" << m_axi_FEATURE_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_RREADY\" :  \"" << m_axi_FEATURE_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_RDATA\" :  \"" << m_axi_FEATURE_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_RLAST\" :  \"" << m_axi_FEATURE_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_RID\" :  \"" << m_axi_FEATURE_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_RUSER\" :  \"" << m_axi_FEATURE_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_RRESP\" :  \"" << m_axi_FEATURE_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_BVALID\" :  \"" << m_axi_FEATURE_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_FEATURE_BREADY\" :  \"" << m_axi_FEATURE_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_BRESP\" :  \"" << m_axi_FEATURE_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_BID\" :  \"" << m_axi_FEATURE_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_FEATURE_BUSER\" :  \"" << m_axi_FEATURE_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWVALID\" :  \"" << s_axi_CONTROL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWREADY\" :  \"" << s_axi_CONTROL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWADDR\" :  \"" << s_axi_CONTROL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WVALID\" :  \"" << s_axi_CONTROL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_WREADY\" :  \"" << s_axi_CONTROL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WDATA\" :  \"" << s_axi_CONTROL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WSTRB\" :  \"" << s_axi_CONTROL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARVALID\" :  \"" << s_axi_CONTROL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARREADY\" :  \"" << s_axi_CONTROL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARADDR\" :  \"" << s_axi_CONTROL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RVALID\" :  \"" << s_axi_CONTROL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_RREADY\" :  \"" << s_axi_CONTROL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RDATA\" :  \"" << s_axi_CONTROL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RRESP\" :  \"" << s_axi_CONTROL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BVALID\" :  \"" << s_axi_CONTROL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_BREADY\" :  \"" << s_axi_CONTROL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BRESP\" :  \"" << s_axi_CONTROL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_AWVALID\" :  \"" << s_axi_SPECS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_AWREADY\" :  \"" << s_axi_SPECS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_AWADDR\" :  \"" << s_axi_SPECS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_WVALID\" :  \"" << s_axi_SPECS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_WREADY\" :  \"" << s_axi_SPECS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_WDATA\" :  \"" << s_axi_SPECS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_WSTRB\" :  \"" << s_axi_SPECS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_ARVALID\" :  \"" << s_axi_SPECS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_ARREADY\" :  \"" << s_axi_SPECS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_ARADDR\" :  \"" << s_axi_SPECS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_RVALID\" :  \"" << s_axi_SPECS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_RREADY\" :  \"" << s_axi_SPECS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_RDATA\" :  \"" << s_axi_SPECS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_RRESP\" :  \"" << s_axi_SPECS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_BVALID\" :  \"" << s_axi_SPECS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_SPECS_BREADY\" :  \"" << s_axi_SPECS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_SPECS_BRESP\" :  \"" << s_axi_SPECS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

